diff --git a/boot/update_main.c b/boot/update_main.c
index 28c97b0..1653fc3 100755
--- a/boot/update_main.c
+++ b/boot/update_main.c
@@ -7,11 +7,19 @@
 #include <reboot.h>
 #include <timer.h>
 #include <uart_api.h>
+#include <panel.h>
+#include <osd.h>
+#include <fonts_update.h>
+
 
 #define DEVICE_UART_PORT_0       0
 #define DEVICE_UART_PORT_1       1
 #define DEVICE_UART_PORT_2       2
 
+extern void init_vpp(void);
+extern void panel_init(void);
+
+
 #if 0
 void fn(void)
 {
@@ -29,6 +37,39 @@ void fn(void)
 }
 #endif
 
+void init_osd(void)
+{
+	int i;
+	//hide_logo();
+	OSD_Enable(0);
+	if(OUTPUT_LVDS == panel_param->output_mode) {
+		OSD_Initial(1920,1080,60,60,1859,1019);
+		OSD_SetFontScale(1, 1);
+	} else if(OUTPUT_VB1 == panel_param->output_mode) {
+		OSD_Initial(3840,2160,120,120,3719,2039);
+		OSD_SetFontScale(2, 2);
+	}
+	OSD_Set3DMode(OSD_3D_MODE_NORMAL);
+	//OSD_SetFontScale(1, 1);
+	//OSD_SetMirror(1);
+	OSD_SetSpacing(2,2,2,2);
+	if(OSD_GetMirror()==1) {
+		OSD_ConfigFonts(FONT_NUM, FONT_WIDTH, FONT_HEIGHT, sosd_font_lib_lut_hvflip, font_mapping, 1);
+	} else if(OSD_GetMirror()==0) {
+		OSD_ConfigFonts(FONT_NUM, FONT_WIDTH, FONT_HEIGHT, sosd_font_lib_lut, font_mapping, 1);
+	}
+	for (i=0; i<FONT_NUM; i++)
+		OSD_SetFontCut(i, sosd_cut_table[i]);
+	for (i=0; i<16; i++)
+		OSD_SetColor(i, nRGBA[i][0], nRGBA[i][1], nRGBA[i][2], nRGBA[i][3]);
+	OSD_SetBackground(1, FONT_BG_COLOR_INDEX);
+	//osd_init = 1;
+	//OSD_CleanScreen(update_menu, 78);
+	OSD_InitialRegionSimple(1, 1, "test update", FONT_NORMAL_COLOR_INDEX, FONT_BG_COLOR_INDEX);
+	OSD_Enable(1);
+}
+
+
 int main(int argc, char *argv[])
 {
 	update_ctrl_t update_ctrl;
@@ -37,6 +78,20 @@ int main(int argc, char *argv[])
 	
 	serial_puts("init spi flash!\n");
 	init_spi_flash();
+
+	printf("Power on.\n");
+	power_on_aml();
+	printf("Init Panel.\n");
+	panel_init();
+	printf("Init Vpp.\n");
+	init_vpp();
+
+	printf("Panel power on.\n");
+	panel_power_on_aml();
+	mdelay(100);
+	init_osd();
+	printf("Backlight power on.\n");
+	backlight_power_on_aml();
 	
 	init_update_ctrl_t(&update_ctrl);
 
diff --git a/driver/vpp/vpp.c b/driver/vpp/vpp.c
index d2cca78..426d826 100755
--- a/driver/vpp/vpp.c
+++ b/driver/vpp/vpp.c
@@ -1536,6 +1536,10 @@ void init_vpp(void)
     //set LVDS
     Wr_reg_bits(INTR_EDGE_0,1,16,1);  //edge trigger
 
+	enable_gamma (1);
+
+    set_tm_rcvy(1,16,3);
+
     delay_us(20);
     enable_vpu(1);
 }
diff --git a/driver/vpp/vpu_util.c b/driver/vpp/vpu_util.c
index f84962a..cf1c7e7 100755
--- a/driver/vpp/vpu_util.c
+++ b/driver/vpp/vpu_util.c
@@ -528,13 +528,15 @@ void enable_wb(int enable)
     Wr_reg_bits(VP_CTRL,        enable&0x1,      4,1);    //enable
     Wr_reg_bits(VP_BYPASS_CTRL,(enable>>1)&0x1,  2,1);    //bypass
 }
-#ifdef IN_FBC_MAIN_CONFIG
+
 //===== sub-unit: Gamma
 void enable_gamma(int enable)
 {
     Wr_reg_bits(VP_CTRL,        enable&0x1,      3,1);    //enable
     Wr_reg_bits(VP_BYPASS_CTRL,(enable>>1)&0x1,  1,1);    //bypass
 }
+#ifdef IN_FBC_MAIN_CONFIG
+
 void config_gamma_mod(vpu_gammamod_t mode)
 {
     Wr_reg_bits(VP_CTRL,        mode& 0x1,      16,1);    //gamma mode

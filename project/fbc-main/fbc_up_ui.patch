diff --git a/boot/update.c b/boot/update.c
index ae15463..2cada8b 100755
--- a/boot/update.c
+++ b/boot/update.c
@@ -9,6 +9,7 @@
 #include <crc.h>
 
 struct serial_device *serial_dev;
+extern int sprintf(char * buffer, const char *__fmt, ...);
 extern int vsprintf(char *buf, const char *fmt, va_list args);
 extern "C" int printfx(const char *__fmt, ...)
 {
@@ -309,7 +310,8 @@ int handle_update(struct update_ctrl *ctrl)
 	int read_stream_size = 0;
 	unsigned erase_size;
 	unsigned crc = 0;
-	
+	char msg_buf[256];
+
 	if(!ctrl) return -1;
 
 	if(ctrl->show_progress && ctrl->show_progress(er_spi_state, 15));
@@ -338,19 +340,28 @@ int handle_update(struct update_ctrl *ctrl)
 		crc = crc32(0, ctrl->buf, (ctrl->received_cnt >= MAX_BUF_SIZE) ? MAX_BUF_SIZE : ctrl->received_cnt);		
 		if(crc != ctrl->crc)
 		{
-			printfx("crc: 0x%x, ctrl->crc: 0x%x\n", crc, ctrl->crc);	
+			printfx("crc: 0x%x, ctrl->crc: 0x%x\n", crc, ctrl->crc);
+			if(ctrl->show_update_msg) {
+				sprintf(msg_buf, "CRC error!!! calculate crc = 0x%X, receive crc = 0x%X\n", crc, ctrl->crc);
+				ctrl->show_update_msg(1, msg_buf);
+			}
 			return -1;
 		}
 		
 		ctrl->flag = rc_pkg_state;
-		
+
 		printfx("start erase! offs: 0x%x, size: 0x%x\n", ctrl->s_offs, erase_size);
 		spi_flash_erase(ctrl->flash_dev, ctrl->s_offs, erase_size);
 
 		printfx("offs: 0x%x, len: 0x%x\n", ctrl->s_offs + ctrl->write_spi_cnt, ret);
 		wlen = spi_flash_write(ctrl->flash_dev, ctrl->s_offs + ctrl->write_spi_cnt, ret, ctrl->buf);
 		ctrl->write_spi_cnt += ret;
-		
+
+		if(ctrl->show_update_msg) {
+			sprintf(msg_buf, "write offset: 0x%X, write size: 0x%X\n", ctrl->s_offs, erase_size);
+			ctrl->show_update_msg(0, msg_buf);
+		}
+
 		printfx("ctrl->write_spi_cnt = %d, ctrl->total = 0x%x, wlen = 0x%x\n", ctrl->write_spi_cnt, ctrl->total, wlen);
 //		if(ctrl->received_cnt < ctrl->total)
 //		{
diff --git a/boot/update_main.c b/boot/update_main.c
index 19606d0..4412403 100755
--- a/boot/update_main.c
+++ b/boot/update_main.c
@@ -11,7 +11,6 @@
 #include <osd.h>
 #include <fonts_update.h>
 
-
 #define DEVICE_UART_PORT_0       0
 #define DEVICE_UART_PORT_1       1
 #define DEVICE_UART_PORT_2       2
@@ -19,6 +18,71 @@
 extern void init_vpp(void);
 extern void panel_init(void);
 
+int gTitleMsgHandle = -1;
+int gUpdateMsgHandle = -1;
+
+void init_osd(void)
+{
+    int i;
+    //hide_logo();
+    OSD_Enable(0);
+    if(OUTPUT_LVDS == panel_param->output_mode) {
+        OSD_Initial(1920,1080,0,0,1919,1079);
+        OSD_SetFontScale(1, 1);
+    } else if(OUTPUT_VB1 == panel_param->output_mode) {
+        OSD_Initial(3840,2160,0,0,3839,2159);
+        OSD_SetFontScale(2, 2);
+    }
+    OSD_Set3DMode(OSD_3D_MODE_NORMAL);
+    //OSD_SetFontScale(1, 1);
+    //OSD_SetMirror(1);
+    OSD_SetSpacing(2,2,2,2);
+    if(OSD_GetMirror()==1) {
+        OSD_ConfigFonts(FONT_NUM, FONT_WIDTH, FONT_HEIGHT, sosd_font_lib_lut_hvflip, font_mapping, 1);
+    } else if(OSD_GetMirror()==0) {
+        OSD_ConfigFonts(FONT_NUM, FONT_WIDTH, FONT_HEIGHT, sosd_font_lib_lut, font_mapping, 1);
+    }
+    for (i=0; i<FONT_NUM; i++)
+        OSD_SetFontCut(i, sosd_cut_table[i]);
+    for (i=0; i<16; i++)
+        OSD_SetColor(i, nRGBA[i][0], nRGBA[i][1], nRGBA[i][2], nRGBA[i][3]);
+    OSD_SetBackground(1, FONT_BG_COLOR_INDEX);
+    //osd_init = 1;
+    //OSD_CleanScreen(update_menu, 78);
+    //OSD_InitialRegionSimple(1, 1, "test update", FONT_NORMAL_COLOR_INDEX, FONT_BG_COLOR_INDEX);
+    OSD_Enable(1);
+}
+
+int show_msg(int *ui_handle, int msg_type, int line, int row, const char *msg) {
+    int forecolor = FONT_NORMAL_COLOR_INDEX;
+    int bgcolor = FONT_BG_COLOR_INDEX;
+
+    if (msg_type == 0) {
+        forecolor = FONT_NORMAL_COLOR_INDEX;
+    } else {
+        forecolor = FONT_HILIGHT_COLOR_INDEX;
+    }
+
+    OSD_InitialRegionSimple(line, row, (char *)msg, forecolor, FONT_BG_COLOR_INDEX);
+/*
+    if (*ui_handle < 0) {
+        *ui_handle = OSD_InitialRegionSimple(line, row, (char *)msg, forecolor, FONT_BG_COLOR_INDEX);
+    } else {
+        OSD_RemoveRegion(*ui_handle);
+        *ui_handle = -1;
+        *ui_handle = OSD_InitialRegionSimple(line, row, (char *)msg, forecolor, FONT_BG_COLOR_INDEX);
+    }
+*/
+    return 0;
+}
+
+int show_title_msg(int msg_type, const char *msg) {
+    return show_msg(&gTitleMsgHandle, msg_type, 0, 100, msg);
+}
+
+int show_update_msg(int msg_type, const char *msg) {
+    return show_msg(&gUpdateMsgHandle, msg_type, 2, 100, msg);
+}
 
 #if 0
 void fn(void)
@@ -37,39 +101,6 @@ void fn(void)
 }
 #endif
 
-void init_osd(void)
-{
-	int i;
-	//hide_logo();
-	OSD_Enable(0);
-	if(OUTPUT_LVDS == panel_param->output_mode) {
-		OSD_Initial(1920,1080,60,60,1859,1019);
-		OSD_SetFontScale(1, 1);
-	} else if(OUTPUT_VB1 == panel_param->output_mode) {
-		OSD_Initial(3840,2160,120,120,3719,2039);
-		OSD_SetFontScale(2, 2);
-	}
-	OSD_Set3DMode(OSD_3D_MODE_NORMAL);
-	//OSD_SetFontScale(1, 1);
-	//OSD_SetMirror(1);
-	OSD_SetSpacing(2,2,2,2);
-	if(OSD_GetMirror()==1) {
-		OSD_ConfigFonts(FONT_NUM, FONT_WIDTH, FONT_HEIGHT, sosd_font_lib_lut_hvflip, font_mapping, 1);
-	} else if(OSD_GetMirror()==0) {
-		OSD_ConfigFonts(FONT_NUM, FONT_WIDTH, FONT_HEIGHT, sosd_font_lib_lut, font_mapping, 1);
-	}
-	for (i=0; i<FONT_NUM; i++)
-		OSD_SetFontCut(i, sosd_cut_table[i]);
-	for (i=0; i<16; i++)
-		OSD_SetColor(i, nRGBA[i][0], nRGBA[i][1], nRGBA[i][2], nRGBA[i][3]);
-	OSD_SetBackground(1, FONT_BG_COLOR_INDEX);
-	//osd_init = 1;
-	//OSD_CleanScreen(update_menu, 78);
-	OSD_InitialRegionSimple(1, 1, "test update", FONT_NORMAL_COLOR_INDEX, FONT_BG_COLOR_INDEX);
-	OSD_Enable(1);
-}
-
-
 int main(int argc, char *argv[])
 {
 	update_ctrl_t update_ctrl;
@@ -87,6 +118,7 @@ int main(int argc, char *argv[])
 	init_vpp();
 
 	init_osd();
+	show_title_msg(0, "Updating...\n");
 	serial_puts("Panel power on.\n");
 	//panel_power_on_aml();
 	//mdelay(100);
@@ -98,6 +130,7 @@ int main(int argc, char *argv[])
     pwm_init();
 	
 	init_update_ctrl_t(&update_ctrl);
+	update_ctrl.show_update_msg = show_update_msg;
 
 	int ret = 1;
 
@@ -109,6 +142,7 @@ int main(int argc, char *argv[])
 
 	do{
 		ret = handle_cmd(&update_ctrl);
+		//update_ctrl.show_update_msg = show_update_msg;
 		
 	} while(!ret);
 	
diff --git a/include/update.h b/include/update.h
index b157899..95f48f6 100755
--- a/include/update.h
+++ b/include/update.h
@@ -64,6 +64,7 @@ typedef struct update_ctrl {
 	int (*do_update)(struct update_ctrl *ctrl);
 	int (*do_check)(struct update_ctrl *ctrl);
 	int (*show_progress)(unsigned state, unsigned progress);
+	int (*show_update_msg)(int msg_type, const char *msg);
 } update_ctrl_t;
 
 void init_update_ctrl_t(update_ctrl_t *ctrl);

// ----------------------------------------------------------------------
// This file is automatically generated from the script:
//
// ./create_headers_from_register_map_h.pl
//
// and was applied to the file
//
// ./register_map.h
//
// DO NOT EDIT!!!!!
// ----------------------------------------------------------------------
//
#ifdef C_ARC_POINTER_H
#else
#define C_ARC_POINTER_H

//
// Reading file:  ./register_map.h
//
// -----------------------------------------------
// Copyright (c) 1997, 1998, AMLOGIC, Inc.
// All rights reserved.
//
// Description:
//
// Input      :
//
// Output     :
//
// -----------------------------------------------
// synopsys translate_off
// synopsys translate_on
//
// Reading file:  periphs_reg.h
//
// synopsys translate_off
// synopsys translate_on
// -------------------------------------------------------------------
// Peripheral 0   (APB slave 0)
// -------------------------------------------------------------------
// -----------------------------------------------
// CBUS_BASE:  PERIPHS0_CBUS_BASE = 0x00
// -----------------------------------------------
#include <gpio.h>
// ----------------------------
// SPI
// ----------------------------
#define P_SPI_FLASH_CMD                            (volatile unsigned long *)0x80030000
    #define SPI_FLASH_READ    31
    #define SPI_FLASH_WREN    30
    #define SPI_FLASH_WRDI    29
    #define SPI_FLASH_RDID    28
    #define SPI_FLASH_RDSR    27
    #define SPI_FLASH_WRSR    26
    #define SPI_FLASH_PP      25
    #define SPI_FLASH_SE      24
    #define SPI_FLASH_BE      23
    #define SPI_FLASH_CE      22
    #define SPI_FLASH_DP      21
    #define SPI_FLASH_RES     20
    #define SPI_HPM           19
    #define SPI_FLASH_USR     18
    #define SPI_FLASH_USR_ADDR 15
    #define SPI_FLASH_USR_DUMMY 14
    #define SPI_FLASH_USR_DIN   13
    #define SPI_FLASH_USR_DOUT   12
    #define SPI_FLASH_USR_DUMMY_BLEN   10
    #define SPI_FLASH_USR_CMD     0
#define P_SPI_FLASH_ADDR                           (volatile unsigned long *)0x80030004
    #define SPI_FLASH_BYTES_LEN 24
    #define SPI_FLASH_ADDR_START 0
#define P_SPI_FLASH_CTRL                           (volatile unsigned long *)0x80030008
    #define SPI_ENABLE_AHB    17
    #define SPI_SST_AAI       16
    #define SPI_RES_RID       15
    #define SPI_FREAD_DUAL    14
    #define SPI_READ_READ_EN  13
    #define SPI_CLK_DIV0      12
    #define SPI_CLKCNT_N      8
    #define SPI_CLKCNT_H      4
    #define SPI_CLKCNT_L      0
#define P_SPI_FLASH_CTRL1                          (volatile unsigned long *)0x8003000c
#define P_SPI_FLASH_STATUS                         (volatile unsigned long *)0x80030010
#define P_SPI_FLASH_CTRL2                          (volatile unsigned long *)0x80030014
#define P_SPI_FLASH_CLOCK                          (volatile unsigned long *)0x80030018
#define P_SPI_FLASH_USER                           (volatile unsigned long *)0x8003001c
#define P_SPI_FLASH_USER1                          (volatile unsigned long *)0x80030020
#define P_SPI_FLASH_USER2                          (volatile unsigned long *)0x80030024
#define P_SPI_FLASH_USER3                          (volatile unsigned long *)0x80030028
#define P_SPI_FLASH_USER4                          (volatile unsigned long *)0x8003002c
#define P_SPI_FLASH_SLAVE                          (volatile unsigned long *)0x80030030
#define P_SPI_FLASH_SLAVE1                         (volatile unsigned long *)0x80030034
#define P_SPI_FLASH_SLAVE2                         (volatile unsigned long *)0x80030038
#define P_SPI_FLASH_SLAVE3                         (volatile unsigned long *)0x8003003c
#define P_SPI_FLASH_C0                             (volatile unsigned long *)0x80030040
#define P_SPI_FLASH_C1                             (volatile unsigned long *)0x80030044
#define P_SPI_FLASH_C2                             (volatile unsigned long *)0x80030048
#define P_SPI_FLASH_C3                             (volatile unsigned long *)0x8003004c
#define P_SPI_FLASH_C4                             (volatile unsigned long *)0x80030050
#define P_SPI_FLASH_C5                             (volatile unsigned long *)0x80030054
#define P_SPI_FLASH_C6                             (volatile unsigned long *)0x80030058
#define P_SPI_FLASH_C7                             (volatile unsigned long *)0x8003005c
#define P_SPI_FLASH_B8                             (volatile unsigned long *)0x80030060
#define P_SPI_FLASH_B9                             (volatile unsigned long *)0x80030064
#define P_SPI_FLASH_B10                            (volatile unsigned long *)0x80030068
#define P_SPI_FLASH_B11                            (volatile unsigned long *)0x8003006c
#define P_SPI_FLASH_B12                            (volatile unsigned long *)0x80030070
#define P_SPI_FLASH_B13                            (volatile unsigned long *)0x80030074
#define P_SPI_FLASH_B14                            (volatile unsigned long *)0x80030078
#define P_SPI_FLASH_B15                            (volatile unsigned long *)0x8003007c
// ----------------------------
// IR Remote
// ----------------------------
#define P_AO_IR_DEC_LDR_ACTIVE                     (volatile unsigned long *)0x80030080
#define P_AO_IR_DEC_LDR_IDLE                       (volatile unsigned long *)0x80030084
#define P_AO_IR_DEC_LDR_REPEAT                     (volatile unsigned long *)0x80030088
#define P_AO_IR_DEC_BIT_0                          (volatile unsigned long *)0x8003008c
#define P_AO_IR_DEC_REG0                           (volatile unsigned long *)0x80030090
#define P_AO_IR_DEC_FRAME                          (volatile unsigned long *)0x80030094
#define P_AO_IR_DEC_STATUS                         (volatile unsigned long *)0x80030098
#define P_AO_IR_DEC_REG1                           (volatile unsigned long *)0x8003009c
// ----------------------------
// Multiformat IR Remote
// ----------------------------
#define P_AO_MF_IR_DEC_LDR_ACTIVE                  (volatile unsigned long *)0x800300c0
#define P_AO_MF_IR_DEC_LDR_IDLE                    (volatile unsigned long *)0x800300c4
#define P_AO_MF_IR_DEC_LDR_REPEAT                  (volatile unsigned long *)0x800300c8
#define P_AO_MF_IR_DEC_BIT_0                       (volatile unsigned long *)0x800300cc
#define P_AO_MF_IR_DEC_REG0                        (volatile unsigned long *)0x800300d0
#define P_AO_MF_IR_DEC_FRAME                       (volatile unsigned long *)0x800300d4
#define P_AO_MF_IR_DEC_STATUS                      (volatile unsigned long *)0x800300d8
#define P_AO_MF_IR_DEC_REG1                        (volatile unsigned long *)0x800300dc
#define P_AO_MF_IR_DEC_REG2                        (volatile unsigned long *)0x800300e0
#define P_AO_MF_IR_DEC_DURATN2                     (volatile unsigned long *)0x800300e4
#define P_AO_MF_IR_DEC_DURATN3                     (volatile unsigned long *)0x800300e8
#define P_AO_MF_IR_DEC_FRAME1                      (volatile unsigned long *)0x800300ec
#define P_AO_MF_IR_DEC_STATUS1                     (volatile unsigned long *)0x800300f0
#define P_AO_MF_IR_DEC_STATUS2                     (volatile unsigned long *)0x800300f4
#define P_AO_MF_IR_DEC_REG3                        (volatile unsigned long *)0x800300f8
#define P_AO_MF_IR_DEC_FRAME_RSV0                  (volatile unsigned long *)0x800300fc
#define P_AO_MF_IR_DEC_FRAME_RSV1                  (volatile unsigned long *)0x80030100
//
// Reading file:  intc_reg.h
//
// synopsys translate_off
// synopsys translate_on
// CBUS base slave address
// -----------------------------------------------
// CBUS_BASE:  INTC_CBUS_BASE = 0x00
// -----------------------------------------------
// Up to 256 registers for this base
#define P_INTC_DEBUG_REG0                          (volatile unsigned long *)0x80030200
#define P_INTC_DEBUG_REG1                          (volatile unsigned long *)0x80030204
#define P_INTC_DEBUG_REG2                          (volatile unsigned long *)0x80030208
#define P_INTC_DEBUG_REG3                          (volatile unsigned long *)0x8003020c
#define P_INTC_DEBUG_REG4                          (volatile unsigned long *)0x80030210
#define P_INTC_DEBUG_REG5                          (volatile unsigned long *)0x80030214
#define P_GPIO_INTR_EDGE_POL                       (volatile unsigned long *)0x80030220
#define P_GPIO_INTR_GPIO_SEL0                      (volatile unsigned long *)0x80030224
#define P_GPIO_INTR_GPIO_SEL1                      (volatile unsigned long *)0x80030228
#define P_GPIO_INTR_FILTER_SEL0                    (volatile unsigned long *)0x8003022c
#define P_INTR_STAT_0                              (volatile unsigned long *)0x80030240
#define P_INTR_STAT_CLR_0                          (volatile unsigned long *)0x80030244
#define P_INTR_MASK_0                              (volatile unsigned long *)0x80030248
#define P_INTR_FIRQ_SEL_0                          (volatile unsigned long *)0x8003024c
#define P_INTR_PENDING_0                           (volatile unsigned long *)0x80030250
#define P_INTR_POLARITY_0                          (volatile unsigned long *)0x80030254
#define P_INTR_EDGE_0                              (volatile unsigned long *)0x80030258
       #define INT_I2S_OUT_PLS_WR_IRQ     0x0
       #define INT_I2S_IN_PLS_RD_IRQ      0x1
       #define INT_IR_DEC                 0x2
       #define INT_TIMERD                 0x3
       #define INT_TIMERC                 0x4
       #define INT_TIMERB                 0x5
       #define INT_TIMERA                 0x6
       #define INT_SPI                    0x7
       #define INT_SAR_ADC                0x8
       #define INT_UART2                  0x9
       #define INT_UART1                  0xA
       #define INT_UART0                  0xB
       #define INT_I2C_1                  0xC
       #define INT_I2C_0                  0xD
       #define INT_WATCHDOG               0xE
       #define INT_VPU_HSYNC              0xF
       #define INT_VPU_VSYNC              0x10
       #define INT_HDMIRX                 0x11
       #define INT_AO_CEC                 0x12
       #define I2S_OUT_FIFO_SMALL0_IRQ    0x13
       #define I2S_OUT_FIFO_BIG1024_IRQ   0x14
       #define I2S_IN_FIFO_SMALL0_IRQ     0x15
       #define I2S_IN_FIFO_BIG1024_IRQ    0x16
       #define INT_VPU_FSM_STATE_CHG_IRQ  0x17
       #define INT_VPU_FSM_STBL_CHG_IRQ   0x18
       #define INT_HDMI_MEAS_IRQ          0x19
       #define INT_HDMIRX_VS_IRQ          0x1a
#define P_INTR_STAT_1                              (volatile unsigned long *)0x80030260
#define P_INTR_STAT_CLR_1                          (volatile unsigned long *)0x80030264
#define P_INTR_MASK_1                              (volatile unsigned long *)0x80030268
#define P_INTR_FIRQ_SEL_1                          (volatile unsigned long *)0x8003026c
#define P_INTR_PENDING_1                           (volatile unsigned long *)0x80030270
#define P_INTR_POLARITY_1                          (volatile unsigned long *)0x80030274
#define P_INTR_EDGE_1                              (volatile unsigned long *)0x80030278
#define P_INTR_STAT_2                              (volatile unsigned long *)0x80030280
#define P_INTR_STAT_CLR_2                          (volatile unsigned long *)0x80030284
#define P_INTR_MASK_2                              (volatile unsigned long *)0x80030288
#define P_INTR_FIRQ_SEL_2                          (volatile unsigned long *)0x8003028c
#define P_INTR_PENDING_2                           (volatile unsigned long *)0x80030290
#define P_INTR_POLARITY_2                          (volatile unsigned long *)0x80030294
#define P_INTR_EDGE_2                              (volatile unsigned long *)0x80030298
#define P_INTR_STAT_3                              (volatile unsigned long *)0x800302a0
#define P_INTR_STAT_CLR_3                          (volatile unsigned long *)0x800302a4
#define P_INTR_MASK_3                              (volatile unsigned long *)0x800302a8
#define P_INTR_FIRQ_SEL_3                          (volatile unsigned long *)0x800302ac
#define P_INTR_PENDING_3                           (volatile unsigned long *)0x800302b0
//`define INTR_POLARITY_3             8'had
//`define INTR_EDGE_3                 8'hae
#define P_TIMER_MUX                                (volatile unsigned long *)0x800302c0
#define P_TIMERA                                   (volatile unsigned long *)0x800302c4
#define P_TIMERB                                   (volatile unsigned long *)0x800302c8
#define P_TIMERC                                   (volatile unsigned long *)0x800302cc
#define P_TIMERD                                   (volatile unsigned long *)0x800302d0
#define P_TIMERE                                   (volatile unsigned long *)0x800302d4
#define P_INTC_DEBUG_REG6                          (volatile unsigned long *)0x80030300
#define P_INTC_DEBUG_REG7                          (volatile unsigned long *)0x80030304
#define P_INTC_DEBUG_REG8                          (volatile unsigned long *)0x80030308
#define P_INTC_DEBUG_REG9                          (volatile unsigned long *)0x8003030c
#define P_INTC_DEBUG_REG10                         (volatile unsigned long *)0x80030310
#define P_INTC_DEBUG_REG11                         (volatile unsigned long *)0x80030314
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  intc_reg.h
//
// -------------------------------------------------------------------
// Peripheral 1   (APB slave 1)
// -------------------------------------------------------------------
// -----------------------------------------------
// CBUS_BASE:  PERIPHS1_CBUS_BASE = 0x01
// -----------------------------------------------
// ----------------------------
// I2C Master 0
// ----------------------------
#define P_I2C_M_0_CONTROL_REG                      (volatile unsigned long *)0x80030400
    #define     I2C_M_MANUAL_SDA_I        26
    #define     I2C_M_MANUAL_SCL_I        25
    #define     I2C_M_MANUAL_SDA_O        24
    #define     I2C_M_MANUAL_SCL_O        23
    #define     I2C_M_MANUAL_EN           22
    #define     I2C_M_DELAY_MSB           21
    #define     I2C_M_DELAY_LSB           12
    #define     I2C_M_DATA_CNT_MSB        11
    #define     I2C_M_DATA_CNT_LSB        8
    #define     I2C_M_CURR_TOKEN_MSB      7
    #define     I2C_M_CURR_TOKEN_LSB      4
    #define     I2C_M_ERROR               3
    #define     I2C_M_STATUS              2
    #define     I2C_M_ACK_IGNORE          1
    #define     I2C_M_START               0
#define P_I2C_M_0_SLAVE_ADDR                       (volatile unsigned long *)0x80030404
#define P_I2C_M_0_TOKEN_LIST0                      (volatile unsigned long *)0x80030408
#define P_I2C_M_0_TOKEN_LIST1                      (volatile unsigned long *)0x8003040c
#define P_I2C_M_0_WDATA_REG0                       (volatile unsigned long *)0x80030410
#define P_I2C_M_0_WDATA_REG1                       (volatile unsigned long *)0x80030414
#define P_I2C_M_0_RDATA_REG0                       (volatile unsigned long *)0x80030418
#define P_I2C_M_0_RDATA_REG1                       (volatile unsigned long *)0x8003041c
// ----------------------------
// I2C Master 1
// ----------------------------
#define P_I2C_M_1_CONTROL_REG                      (volatile unsigned long *)0x80030420
#define P_I2C_M_1_SLAVE_ADDR                       (volatile unsigned long *)0x80030424
#define P_I2C_M_1_TOKEN_LIST0                      (volatile unsigned long *)0x80030428
#define P_I2C_M_1_TOKEN_LIST1                      (volatile unsigned long *)0x8003042c
#define P_I2C_M_1_WDATA_REG0                       (volatile unsigned long *)0x80030430
#define P_I2C_M_1_WDATA_REG1                       (volatile unsigned long *)0x80030434
#define P_I2C_M_1_RDATA_REG0                       (volatile unsigned long *)0x80030438
#define P_I2C_M_1_RDATA_REG1                       (volatile unsigned long *)0x8003043c
// ----------------------------
// UART0
// ----------------------------
#define P_UART0_WFIFO                              (volatile unsigned long *)0x80030440
#define P_UART0_RFIFO                              (volatile unsigned long *)0x80030444
#define P_UART0_CONTROL                            (volatile unsigned long *)0x80030448
#define P_UART0_STATUS                             (volatile unsigned long *)0x8003044c
#define P_UART0_MISC                               (volatile unsigned long *)0x80030450
#define P_UART0_REG5                               (volatile unsigned long *)0x80030454
// ----------------------------
// UART1
// ----------------------------
#define P_UART1_WFIFO                              (volatile unsigned long *)0x80030460
#define P_UART1_RFIFO                              (volatile unsigned long *)0x80030464
#define P_UART1_CONTROL                            (volatile unsigned long *)0x80030468
#define P_UART1_STATUS                             (volatile unsigned long *)0x8003046c
#define P_UART1_MISC                               (volatile unsigned long *)0x80030470
#define P_UART1_REG5                               (volatile unsigned long *)0x80030474
// ----------------------------
// UART2
// ----------------------------
#define P_UART2_WFIFO                              (volatile unsigned long *)0x80030480
#define P_UART2_RFIFO                              (volatile unsigned long *)0x80030484
#define P_UART2_CONTROL                            (volatile unsigned long *)0x80030488
#define P_UART2_STATUS                             (volatile unsigned long *)0x8003048c
#define P_UART2_MISC                               (volatile unsigned long *)0x80030490
#define P_UART2_REG5                               (volatile unsigned long *)0x80030494
// ----------------------------
// SAR ADC
// ----------------------------
#define P_AO_SAR_ADC_REG0                          (volatile unsigned long *)0x800304c0
#define P_AO_SAR_ADC_CHAN_LIST                     (volatile unsigned long *)0x800304c4
#define P_AO_SAR_ADC_AVG_CNTL                      (volatile unsigned long *)0x800304c8
#define P_AO_SAR_ADC_REG3                          (volatile unsigned long *)0x800304cc
#define P_AO_SAR_ADC_DELAY                         (volatile unsigned long *)0x800304d0
#define P_AO_SAR_ADC_LAST_RD                       (volatile unsigned long *)0x800304d4
#define P_AO_SAR_ADC_FIFO_RD                       (volatile unsigned long *)0x800304d8
#define P_AO_SAR_ADC_AUX_SW                        (volatile unsigned long *)0x800304dc
#define P_AO_SAR_ADC_CHAN_10_SW                    (volatile unsigned long *)0x800304e0
#define P_AO_SAR_ADC_DETECT_IDLE_SW                (volatile unsigned long *)0x800304e4
#define P_AO_SAR_ADC_DELTA_10                      (volatile unsigned long *)0x800304e8
#define P_AO_SAR_ADC_REG11                         (volatile unsigned long *)0x800304ec
// ----------------------------
// PWM / DS A/B
// ----------------------------
#define P_PWM_PWM_A                                (volatile unsigned long *)0x80030500
#define P_PWM_PWM_B                                (volatile unsigned long *)0x80030504
#define P_PWM_MISC_REG_AB                          (volatile unsigned long *)0x80030508
#define P_PWM_DELTA_SIGMA_AB                       (volatile unsigned long *)0x8003050c
// ----------------------------
// EE General Registers
// ----------------------------
// Move as needed...Created by Chris Maslyar because I needed a register or two in the EE domain :)
#define P_CRT_GEN_CLK_CNTL                         (volatile unsigned long *)0x80030520
//system pll control
#define P_SYS_PLL_CTL                              (volatile unsigned long *)0x800305c0
#define P_SYS_PLL_CTL1                             (volatile unsigned long *)0x800305c4
#define P_SYS_PLL_CTL2                             (volatile unsigned long *)0x800305c8
#define P_SYS_PLL_CTL3                             (volatile unsigned long *)0x800305cc
#define P_SYS_PLL_CTL4                             (volatile unsigned long *)0x800305d0
#define P_SYS_DPLL_TOP                             (volatile unsigned long *)0x800305d4
//control reg for i2c ahb master
#define P_PERIPHS_I2C_MASTER_CTL                   (volatile unsigned long *)0x800305e0
// ---------------------------
// Generic production test
// ----------------------------
#define P_PROD_TEST_REG0                           (volatile unsigned long *)0x800305e4
#define P_PROD_TEST_REG1                           (volatile unsigned long *)0x800305e8
//video clock control
#define P_VID_PLL_CLK_CNTL                         (volatile unsigned long *)0x800305f0
#define P_VID_CLK_CNTL                             (volatile unsigned long *)0x800305f4
#define P_HDMIRX_CFG_CLK_CNTL                      (volatile unsigned long *)0x800305fc
#define P_HDMIRX_AUD_CLK_CNTL                      (volatile unsigned long *)0x80030600
//vx1_lvds phy
#define P_VX1_LVDS_PHY_CNTL0                       (volatile unsigned long *)0x80030604
#define P_VX1_LVDS_PHY_CNTL1                       (volatile unsigned long *)0x80030608
#define P_VX1_LVDS_PHY_CNTL2                       (volatile unsigned long *)0x8003060c
#define P_VX1_LVDS_PHY_STATUS                      (volatile unsigned long *)0x80030610
//debug bus select
#define P_DEBUG_BUS_SEL_CTL                        (volatile unsigned long *)0x80030614
//reference clock control
#define P_REFERENCE_CLK_CNTL                       (volatile unsigned long *)0x80030618
// HDMI RX MEAS
#define P_HDMIRX_MEAS_CLK_CNTL                     (volatile unsigned long *)0x8003061c
//VX1_LVDS_PHY
#define P_VX1_LVDS_COMBO_CTL0                      (volatile unsigned long *)0x80030628
#define P_VX1_LVDS_COMBO_CTL1                      (volatile unsigned long *)0x8003062c
#define P_VX1_LVDS_COMBO_CTL2                      (volatile unsigned long *)0x80030630
#define P_VX1_LVDS_COMBO_CTL3                      (volatile unsigned long *)0x80030634
//---------------------------------------------------
//   clock measurement
//---------------------------------------------------
#define P_MSR_CLK_REG0                             (volatile unsigned long *)0x80030640
#define P_MSR_CLK_REG1                             (volatile unsigned long *)0x80030644
#define P_MSR_CLK_REG2                             (volatile unsigned long *)0x80030648
#define P_MSR_CLK_REG3                             (volatile unsigned long *)0x8003064c
#define P_MSR_CLK_REG4                             (volatile unsigned long *)0x80030650
#define P_MSR_CLK_REG5                             (volatile unsigned long *)0x80030654
#define P_MSR_CLK_DUTY                             (volatile unsigned long *)0x80030658
//vx1_lvds pll control
#define P_VX1_LVDS_PLL_CTL                         (volatile unsigned long *)0x80030668
#define P_VX1_LVDS_PLL_CTL1                        (volatile unsigned long *)0x8003066c
#define P_VX1_LVDS_PLL_CTL2                        (volatile unsigned long *)0x80030670
#define P_VX1_LVDS_PLL_CTL3                        (volatile unsigned long *)0x80030674
#define P_VX1_LVDS_PLL_CTL4                        (volatile unsigned long *)0x80030678
#define P_VX1_LVDS_PLL_CTL5                        (volatile unsigned long *)0x80030660
#define P_VX1_LVDS_PLL_CTL6                        (volatile unsigned long *)0x80030664
//METAL_REVISION
#define P_METAL_REVISION                           (volatile unsigned long *)0x80030680
//global clock gate enable in EE domain
#define P_PERIPHS_CLK_GATE_EN_EE                   (volatile unsigned long *)0x80030684
// -------------------------------------------------------------------
// Peripheral 2   (APB slave 2)
// -------------------------------------------------------------------
// -----------------------------------------------
// CBUS_BASE:  PERIPHS2_CBUS_BASE = 0x02
// -----------------------------------------------
// ---------------------------
// test_n regs
// ----------------------------
#define P_PREG_JTAG_GPIO_ADDR                      (volatile unsigned long *)0x80030800
// ---------------------------
// Sticky regs
// ----------------------------
#define P_PREG_STICKY_REG0                         (volatile unsigned long *)0x80030804
#define P_PREG_STICKY_REG1                         (volatile unsigned long *)0x80030808
#define P_PREG_WRITE_ONCE_REG                      (volatile unsigned long *)0x8003080c
// ---------------------------
// reset regs
// ----------------------------
#define P_RESET0_REGISTER                          (volatile unsigned long *)0x80030810
#define P_RESET1_REGISTER                          (volatile unsigned long *)0x80030814
#define P_RESET0_LEVEL                             (volatile unsigned long *)0x80030820
#define P_RESET1_LEVEL                             (volatile unsigned long *)0x80030824
#define P_RESET_EE_LEVEL                           (volatile unsigned long *)0x80030828

//other registers in periph_regs.v
#define P_PREG_CTLREG0_ADDR                        (volatile unsigned long *)0x800308c0
#define P_ADC_TOP_MISC                             (volatile unsigned long *)0x800308c4
//control reg for ahb arbiter
#define P_PERIPHS_AHB_ARB_CTL                      (volatile unsigned long *)0x800308e0
//control reg for watchdog
#define P_PERIPHS_WATCHDOG_CTL                     (volatile unsigned long *)0x800308e4
#define P_PERIPHS_WATCHDOG_CNT                     (volatile unsigned long *)0x800308e8
//control reg for memory bist
#define P_PERIPHS_MEMORY_BIST_CTL                  (volatile unsigned long *)0x800308ec
//power down control for SRAM
#define P_PERIPHS_SRAM_PD                          (volatile unsigned long *)0x800308f0
//global clock gate enable in AO domain
#define P_PERIPHS_CLK_GATE_EN_AO                   (volatile unsigned long *)0x800308f4
//power down and isolation control
#define P_EE_PWR_ISO_CTL                           (volatile unsigned long *)0x800308f8
//system clock control
#define P_SYS_CLK_CNTL                             (volatile unsigned long *)0x800308fc
//sar adc clock control
#define P_SAR_ADC_CLK_CNTL                         (volatile unsigned long *)0x80030900
//internal osc calibration control
#define P_INTER_OSC_CAL_CTL                        (volatile unsigned long *)0x80030904
#define P_INTER_OSC_CAL_STATUS                     (volatile unsigned long *)0x80030908
//internal osc control
#define P_INTER_OSC_CTL0                           (volatile unsigned long *)0x8003090c
#define P_INTER_OSC_CTL1                           (volatile unsigned long *)0x80030910
//AO domain system control
#define P_AO_SYS_CONTROL_REG0                      (volatile unsigned long *)0x80030914
//32KHz clock control
#define P_CEC_CLK_32K_CNTL                         (volatile unsigned long *)0x80030918
//crystal clock divider control
#define P_CRYSTAL_CLK_DIV_CNTL                     (volatile unsigned long *)0x8003091c
//watchdog & timebase osc clock control
#define P_WATCHDOG_TIMEBASE_OSC_CLK_CNTL           (volatile unsigned long *)0x80030920
//BIASGEN control
#define P_BIASGEN_CNTL                             (volatile unsigned long *)0x80030924
//---------------------------------------------------
//   CEC in AO
//---------------------------------------------------
#define P_AO_CEC_GEN_CNTL                          (volatile unsigned long *)0x80030940
#define P_AO_CEC_RW_REG                            (volatile unsigned long *)0x80030944
#define P_AO_CEC_INTR_MASKN                        (volatile unsigned long *)0x80030948
#define P_AO_CEC_INTR_CLR                          (volatile unsigned long *)0x8003094c
#define P_AO_CEC_INTR_STAT                         (volatile unsigned long *)0x80030950
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  periphs_reg.h
//
//========================================================================
// I2S registers   (APB slave 7)
//========================================================================
// -----------------------------------------------
// CBUS_BASE:  I2S_CTRL_CBUS_BASE = 0x08
// -----------------------------------------------
#define P_I2S_IN_CTRL                              (volatile unsigned long *)0x80032000
    #define I2S_IN_FAST_ENABLE 31
    #define I2S_IN_SLOW_ENABLE 30
    #define I2S_IN_16BIT 29
    #define I2S_IN_DEBUG 28
    #define I2S_IN_REV_WS 27
    #define I2S_IN_REV_DAT 26
    #define I2S_IN_BIT_SKEW 23 //[25:23]
    #define I2S_IN_LR_TOREG 22
    #define I2S_SCK_TOINPATH_SEL 21
    #define I2S_SCK_TOOUTPATH_SEL 20
    #define I2S_SCK_TOGPIO_SEL 19
    #define DETECT_CH_STATUS 18
    #define I2S_IN_IRQ_EN_NUM 10 //[7:0]
    #define I2S_IN_IRQ_NUM 0 //[9:0]
#define P_I2S_OUT_CTRL                             (volatile unsigned long *)0x80032004
    #define I2S_OUT_FAST_ENABLE 31
    #define I2S_OUT_SLOW_ENABLE 30
    #define I2S_OUT_16BIT 29
    #define I2S_OUT_DEBUG 28
    #define I2S_OUT_REV_WS 27
    #define I2S_OUT_REV_DAT 26
    #define I2S_OUT_BIT_SKEW 23 //[25:23]
    #define I2S_OUT_LR_TOREG 22
    #define RESERVED 18 //[21:18]
    #define I2S_OUT_IRQ_EN_NUM 10 //[7:0]
    #define I2S_OUT_IRQ_NUM 0 //[9:0]
#define P_I2S_STATE                                (volatile unsigned long *)0x80032008
#define P_CH_STATUS1_0                             (volatile unsigned long *)0x8003200c
#define P_CH_STATUS1_1                             (volatile unsigned long *)0x80032010
#define P_CH_STATUS1_2                             (volatile unsigned long *)0x80032014
#define P_CH_STATUS1_3                             (volatile unsigned long *)0x80032018
#define P_CH_STATUS1_4                             (volatile unsigned long *)0x8003201c
#define P_CH_STATUS1_5                             (volatile unsigned long *)0x80032020
#define P_CH_STATUS2_0                             (volatile unsigned long *)0x80032024
#define P_CH_STATUS2_1                             (volatile unsigned long *)0x80032028
#define P_CH_STATUS2_2                             (volatile unsigned long *)0x8003202c
#define P_CH_STATUS2_3                             (volatile unsigned long *)0x80032030
#define P_CH_STATUS2_4                             (volatile unsigned long *)0x80032034
#define P_CH_STATUS2_5                             (volatile unsigned long *)0x80032038
#define P_CH_STATUS_LOCK                           (volatile unsigned long *)0x8003203c
#define P_HDMI_MEAS_CTRL                           (volatile unsigned long *)0x80032040
#define P_HDMI_MEAS_M1                             (volatile unsigned long *)0x80032044
#define P_HDMI_MEAS_STAT1                          (volatile unsigned long *)0x80032048
#define P_HDMI_MEAS_STAT2                          (volatile unsigned long *)0x8003204c
// -----------------------------------------------
// CBUS_BASE:  I2S_READ_CBUS_BASE = 0x09
// -----------------------------------------------
#define P_I2S_READ_ADR_00                          (volatile unsigned long *)0x80032400
#define P_I2S_READ_ADR_01                          (volatile unsigned long *)0x80032404
#define P_I2S_READ_ADR_02                          (volatile unsigned long *)0x80032408
#define P_I2S_READ_ADR_03                          (volatile unsigned long *)0x8003240c
#define P_I2S_READ_ADR_04                          (volatile unsigned long *)0x80032410
#define P_I2S_READ_ADR_05                          (volatile unsigned long *)0x80032414
#define P_I2S_READ_ADR_06                          (volatile unsigned long *)0x80032418
#define P_I2S_READ_ADR_07                          (volatile unsigned long *)0x8003241c
#define P_I2S_READ_ADR_08                          (volatile unsigned long *)0x80032420
#define P_I2S_READ_ADR_09                          (volatile unsigned long *)0x80032424
#define P_I2S_READ_ADR_0A                          (volatile unsigned long *)0x80032428
#define P_I2S_READ_ADR_0B                          (volatile unsigned long *)0x8003242c
#define P_I2S_READ_ADR_0C                          (volatile unsigned long *)0x80032430
#define P_I2S_READ_ADR_0D                          (volatile unsigned long *)0x80032434
#define P_I2S_READ_ADR_0E                          (volatile unsigned long *)0x80032438
#define P_I2S_READ_ADR_0F                          (volatile unsigned long *)0x8003243c
#define P_I2S_READ_ADR_10                          (volatile unsigned long *)0x80032440
#define P_I2S_READ_ADR_11                          (volatile unsigned long *)0x80032444
#define P_I2S_READ_ADR_12                          (volatile unsigned long *)0x80032448
#define P_I2S_READ_ADR_13                          (volatile unsigned long *)0x8003244c
#define P_I2S_READ_ADR_14                          (volatile unsigned long *)0x80032450
#define P_I2S_READ_ADR_15                          (volatile unsigned long *)0x80032454
#define P_I2S_READ_ADR_16                          (volatile unsigned long *)0x80032458
#define P_I2S_READ_ADR_17                          (volatile unsigned long *)0x8003245c
#define P_I2S_READ_ADR_18                          (volatile unsigned long *)0x80032460
#define P_I2S_READ_ADR_19                          (volatile unsigned long *)0x80032464
#define P_I2S_READ_ADR_1A                          (volatile unsigned long *)0x80032468
#define P_I2S_READ_ADR_1B                          (volatile unsigned long *)0x8003246c
#define P_I2S_READ_ADR_1C                          (volatile unsigned long *)0x80032470
#define P_I2S_READ_ADR_1D                          (volatile unsigned long *)0x80032474
#define P_I2S_READ_ADR_1E                          (volatile unsigned long *)0x80032478
#define P_I2S_READ_ADR_1F                          (volatile unsigned long *)0x8003247c
#define P_I2S_READ_ADR_20                          (volatile unsigned long *)0x80032480
#define P_I2S_READ_ADR_21                          (volatile unsigned long *)0x80032484
#define P_I2S_READ_ADR_22                          (volatile unsigned long *)0x80032488
#define P_I2S_READ_ADR_23                          (volatile unsigned long *)0x8003248c
#define P_I2S_READ_ADR_24                          (volatile unsigned long *)0x80032490
#define P_I2S_READ_ADR_25                          (volatile unsigned long *)0x80032494
#define P_I2S_READ_ADR_26                          (volatile unsigned long *)0x80032498
#define P_I2S_READ_ADR_27                          (volatile unsigned long *)0x8003249c
#define P_I2S_READ_ADR_28                          (volatile unsigned long *)0x800324a0
#define P_I2S_READ_ADR_29                          (volatile unsigned long *)0x800324a4
#define P_I2S_READ_ADR_2A                          (volatile unsigned long *)0x800324a8
#define P_I2S_READ_ADR_2B                          (volatile unsigned long *)0x800324ac
#define P_I2S_READ_ADR_2C                          (volatile unsigned long *)0x800324b0
#define P_I2S_READ_ADR_2D                          (volatile unsigned long *)0x800324b4
#define P_I2S_READ_ADR_2E                          (volatile unsigned long *)0x800324b8
#define P_I2S_READ_ADR_2F                          (volatile unsigned long *)0x800324bc
#define P_I2S_READ_ADR_30                          (volatile unsigned long *)0x800324c0
#define P_I2S_READ_ADR_31                          (volatile unsigned long *)0x800324c4
#define P_I2S_READ_ADR_32                          (volatile unsigned long *)0x800324c8
#define P_I2S_READ_ADR_33                          (volatile unsigned long *)0x800324cc
#define P_I2S_READ_ADR_34                          (volatile unsigned long *)0x800324d0
#define P_I2S_READ_ADR_35                          (volatile unsigned long *)0x800324d4
#define P_I2S_READ_ADR_36                          (volatile unsigned long *)0x800324d8
#define P_I2S_READ_ADR_37                          (volatile unsigned long *)0x800324dc
#define P_I2S_READ_ADR_38                          (volatile unsigned long *)0x800324e0
#define P_I2S_READ_ADR_39                          (volatile unsigned long *)0x800324e4
#define P_I2S_READ_ADR_3A                          (volatile unsigned long *)0x800324e8
#define P_I2S_READ_ADR_3B                          (volatile unsigned long *)0x800324ec
#define P_I2S_READ_ADR_3C                          (volatile unsigned long *)0x800324f0
#define P_I2S_READ_ADR_3D                          (volatile unsigned long *)0x800324f4
#define P_I2S_READ_ADR_3E                          (volatile unsigned long *)0x800324f8
#define P_I2S_READ_ADR_3F                          (volatile unsigned long *)0x800324fc
#define P_I2S_READ_ADR_40                          (volatile unsigned long *)0x80032500
#define P_I2S_READ_ADR_41                          (volatile unsigned long *)0x80032504
#define P_I2S_READ_ADR_42                          (volatile unsigned long *)0x80032508
#define P_I2S_READ_ADR_43                          (volatile unsigned long *)0x8003250c
#define P_I2S_READ_ADR_44                          (volatile unsigned long *)0x80032510
#define P_I2S_READ_ADR_45                          (volatile unsigned long *)0x80032514
#define P_I2S_READ_ADR_46                          (volatile unsigned long *)0x80032518
#define P_I2S_READ_ADR_47                          (volatile unsigned long *)0x8003251c
#define P_I2S_READ_ADR_48                          (volatile unsigned long *)0x80032520
#define P_I2S_READ_ADR_49                          (volatile unsigned long *)0x80032524
#define P_I2S_READ_ADR_4A                          (volatile unsigned long *)0x80032528
#define P_I2S_READ_ADR_4B                          (volatile unsigned long *)0x8003252c
#define P_I2S_READ_ADR_4C                          (volatile unsigned long *)0x80032530
#define P_I2S_READ_ADR_4D                          (volatile unsigned long *)0x80032534
#define P_I2S_READ_ADR_4E                          (volatile unsigned long *)0x80032538
#define P_I2S_READ_ADR_4F                          (volatile unsigned long *)0x8003253c
#define P_I2S_READ_ADR_50                          (volatile unsigned long *)0x80032540
#define P_I2S_READ_ADR_51                          (volatile unsigned long *)0x80032544
#define P_I2S_READ_ADR_52                          (volatile unsigned long *)0x80032548
#define P_I2S_READ_ADR_53                          (volatile unsigned long *)0x8003254c
#define P_I2S_READ_ADR_54                          (volatile unsigned long *)0x80032550
#define P_I2S_READ_ADR_55                          (volatile unsigned long *)0x80032554
#define P_I2S_READ_ADR_56                          (volatile unsigned long *)0x80032558
#define P_I2S_READ_ADR_57                          (volatile unsigned long *)0x8003255c
#define P_I2S_READ_ADR_58                          (volatile unsigned long *)0x80032560
#define P_I2S_READ_ADR_59                          (volatile unsigned long *)0x80032564
#define P_I2S_READ_ADR_5A                          (volatile unsigned long *)0x80032568
#define P_I2S_READ_ADR_5B                          (volatile unsigned long *)0x8003256c
#define P_I2S_READ_ADR_5C                          (volatile unsigned long *)0x80032570
#define P_I2S_READ_ADR_5D                          (volatile unsigned long *)0x80032574
#define P_I2S_READ_ADR_5E                          (volatile unsigned long *)0x80032578
#define P_I2S_READ_ADR_5F                          (volatile unsigned long *)0x8003257c
#define P_I2S_READ_ADR_60                          (volatile unsigned long *)0x80032580
#define P_I2S_READ_ADR_61                          (volatile unsigned long *)0x80032584
#define P_I2S_READ_ADR_62                          (volatile unsigned long *)0x80032588
#define P_I2S_READ_ADR_63                          (volatile unsigned long *)0x8003258c
#define P_I2S_READ_ADR_64                          (volatile unsigned long *)0x80032590
#define P_I2S_READ_ADR_65                          (volatile unsigned long *)0x80032594
#define P_I2S_READ_ADR_66                          (volatile unsigned long *)0x80032598
#define P_I2S_READ_ADR_67                          (volatile unsigned long *)0x8003259c
#define P_I2S_READ_ADR_68                          (volatile unsigned long *)0x800325a0
#define P_I2S_READ_ADR_69                          (volatile unsigned long *)0x800325a4
#define P_I2S_READ_ADR_6A                          (volatile unsigned long *)0x800325a8
#define P_I2S_READ_ADR_6B                          (volatile unsigned long *)0x800325ac
#define P_I2S_READ_ADR_6C                          (volatile unsigned long *)0x800325b0
#define P_I2S_READ_ADR_6D                          (volatile unsigned long *)0x800325b4
#define P_I2S_READ_ADR_6E                          (volatile unsigned long *)0x800325b8
#define P_I2S_READ_ADR_6F                          (volatile unsigned long *)0x800325bc
#define P_I2S_READ_ADR_70                          (volatile unsigned long *)0x800325c0
#define P_I2S_READ_ADR_71                          (volatile unsigned long *)0x800325c4
#define P_I2S_READ_ADR_72                          (volatile unsigned long *)0x800325c8
#define P_I2S_READ_ADR_73                          (volatile unsigned long *)0x800325cc
#define P_I2S_READ_ADR_74                          (volatile unsigned long *)0x800325d0
#define P_I2S_READ_ADR_75                          (volatile unsigned long *)0x800325d4
#define P_I2S_READ_ADR_76                          (volatile unsigned long *)0x800325d8
#define P_I2S_READ_ADR_77                          (volatile unsigned long *)0x800325dc
#define P_I2S_READ_ADR_78                          (volatile unsigned long *)0x800325e0
#define P_I2S_READ_ADR_79                          (volatile unsigned long *)0x800325e4
#define P_I2S_READ_ADR_7A                          (volatile unsigned long *)0x800325e8
#define P_I2S_READ_ADR_7B                          (volatile unsigned long *)0x800325ec
#define P_I2S_READ_ADR_7C                          (volatile unsigned long *)0x800325f0
#define P_I2S_READ_ADR_7D                          (volatile unsigned long *)0x800325f4
#define P_I2S_READ_ADR_7E                          (volatile unsigned long *)0x800325f8
#define P_I2S_READ_ADR_7F                          (volatile unsigned long *)0x800325fc
#define P_I2S_READ_ADR_80                          (volatile unsigned long *)0x80032600
#define P_I2S_READ_ADR_81                          (volatile unsigned long *)0x80032604
#define P_I2S_READ_ADR_82                          (volatile unsigned long *)0x80032608
#define P_I2S_READ_ADR_83                          (volatile unsigned long *)0x8003260c
#define P_I2S_READ_ADR_84                          (volatile unsigned long *)0x80032610
#define P_I2S_READ_ADR_85                          (volatile unsigned long *)0x80032614
#define P_I2S_READ_ADR_86                          (volatile unsigned long *)0x80032618
#define P_I2S_READ_ADR_87                          (volatile unsigned long *)0x8003261c
#define P_I2S_READ_ADR_88                          (volatile unsigned long *)0x80032620
#define P_I2S_READ_ADR_89                          (volatile unsigned long *)0x80032624
#define P_I2S_READ_ADR_8A                          (volatile unsigned long *)0x80032628
#define P_I2S_READ_ADR_8B                          (volatile unsigned long *)0x8003262c
#define P_I2S_READ_ADR_8C                          (volatile unsigned long *)0x80032630
#define P_I2S_READ_ADR_8D                          (volatile unsigned long *)0x80032634
#define P_I2S_READ_ADR_8E                          (volatile unsigned long *)0x80032638
#define P_I2S_READ_ADR_8F                          (volatile unsigned long *)0x8003263c
#define P_I2S_READ_ADR_90                          (volatile unsigned long *)0x80032640
#define P_I2S_READ_ADR_91                          (volatile unsigned long *)0x80032644
#define P_I2S_READ_ADR_92                          (volatile unsigned long *)0x80032648
#define P_I2S_READ_ADR_93                          (volatile unsigned long *)0x8003264c
#define P_I2S_READ_ADR_94                          (volatile unsigned long *)0x80032650
#define P_I2S_READ_ADR_95                          (volatile unsigned long *)0x80032654
#define P_I2S_READ_ADR_96                          (volatile unsigned long *)0x80032658
#define P_I2S_READ_ADR_97                          (volatile unsigned long *)0x8003265c
#define P_I2S_READ_ADR_98                          (volatile unsigned long *)0x80032660
#define P_I2S_READ_ADR_99                          (volatile unsigned long *)0x80032664
#define P_I2S_READ_ADR_9A                          (volatile unsigned long *)0x80032668
#define P_I2S_READ_ADR_9B                          (volatile unsigned long *)0x8003266c
#define P_I2S_READ_ADR_9C                          (volatile unsigned long *)0x80032670
#define P_I2S_READ_ADR_9D                          (volatile unsigned long *)0x80032674
#define P_I2S_READ_ADR_9E                          (volatile unsigned long *)0x80032678
#define P_I2S_READ_ADR_9F                          (volatile unsigned long *)0x8003267c
#define P_I2S_READ_ADR_A0                          (volatile unsigned long *)0x80032680
#define P_I2S_READ_ADR_A1                          (volatile unsigned long *)0x80032684
#define P_I2S_READ_ADR_A2                          (volatile unsigned long *)0x80032688
#define P_I2S_READ_ADR_A3                          (volatile unsigned long *)0x8003268c
#define P_I2S_READ_ADR_A4                          (volatile unsigned long *)0x80032690
#define P_I2S_READ_ADR_A5                          (volatile unsigned long *)0x80032694
#define P_I2S_READ_ADR_A6                          (volatile unsigned long *)0x80032698
#define P_I2S_READ_ADR_A7                          (volatile unsigned long *)0x8003269c
#define P_I2S_READ_ADR_A8                          (volatile unsigned long *)0x800326a0
#define P_I2S_READ_ADR_A9                          (volatile unsigned long *)0x800326a4
#define P_I2S_READ_ADR_AA                          (volatile unsigned long *)0x800326a8
#define P_I2S_READ_ADR_AB                          (volatile unsigned long *)0x800326ac
#define P_I2S_READ_ADR_AC                          (volatile unsigned long *)0x800326b0
#define P_I2S_READ_ADR_AD                          (volatile unsigned long *)0x800326b4
#define P_I2S_READ_ADR_AE                          (volatile unsigned long *)0x800326b8
#define P_I2S_READ_ADR_AF                          (volatile unsigned long *)0x800326bc
#define P_I2S_READ_ADR_B0                          (volatile unsigned long *)0x800326c0
#define P_I2S_READ_ADR_B1                          (volatile unsigned long *)0x800326c4
#define P_I2S_READ_ADR_B2                          (volatile unsigned long *)0x800326c8
#define P_I2S_READ_ADR_B3                          (volatile unsigned long *)0x800326cc
#define P_I2S_READ_ADR_B4                          (volatile unsigned long *)0x800326d0
#define P_I2S_READ_ADR_B5                          (volatile unsigned long *)0x800326d4
#define P_I2S_READ_ADR_B6                          (volatile unsigned long *)0x800326d8
#define P_I2S_READ_ADR_B7                          (volatile unsigned long *)0x800326dc
#define P_I2S_READ_ADR_B8                          (volatile unsigned long *)0x800326e0
#define P_I2S_READ_ADR_B9                          (volatile unsigned long *)0x800326e4
#define P_I2S_READ_ADR_BA                          (volatile unsigned long *)0x800326e8
#define P_I2S_READ_ADR_BB                          (volatile unsigned long *)0x800326ec
#define P_I2S_READ_ADR_BC                          (volatile unsigned long *)0x800326f0
#define P_I2S_READ_ADR_BD                          (volatile unsigned long *)0x800326f4
#define P_I2S_READ_ADR_BE                          (volatile unsigned long *)0x800326f8
#define P_I2S_READ_ADR_BF                          (volatile unsigned long *)0x800326fc
#define P_I2S_READ_ADR_C0                          (volatile unsigned long *)0x80032700
#define P_I2S_READ_ADR_C1                          (volatile unsigned long *)0x80032704
#define P_I2S_READ_ADR_C2                          (volatile unsigned long *)0x80032708
#define P_I2S_READ_ADR_C3                          (volatile unsigned long *)0x8003270c
#define P_I2S_READ_ADR_C4                          (volatile unsigned long *)0x80032710
#define P_I2S_READ_ADR_C5                          (volatile unsigned long *)0x80032714
#define P_I2S_READ_ADR_C6                          (volatile unsigned long *)0x80032718
#define P_I2S_READ_ADR_C7                          (volatile unsigned long *)0x8003271c
#define P_I2S_READ_ADR_C8                          (volatile unsigned long *)0x80032720
#define P_I2S_READ_ADR_C9                          (volatile unsigned long *)0x80032724
#define P_I2S_READ_ADR_CA                          (volatile unsigned long *)0x80032728
#define P_I2S_READ_ADR_CB                          (volatile unsigned long *)0x8003272c
#define P_I2S_READ_ADR_CC                          (volatile unsigned long *)0x80032730
#define P_I2S_READ_ADR_CD                          (volatile unsigned long *)0x80032734
#define P_I2S_READ_ADR_CE                          (volatile unsigned long *)0x80032738
#define P_I2S_READ_ADR_CF                          (volatile unsigned long *)0x8003273c
#define P_I2S_READ_ADR_D0                          (volatile unsigned long *)0x80032740
#define P_I2S_READ_ADR_D1                          (volatile unsigned long *)0x80032744
#define P_I2S_READ_ADR_D2                          (volatile unsigned long *)0x80032748
#define P_I2S_READ_ADR_D3                          (volatile unsigned long *)0x8003274c
#define P_I2S_READ_ADR_D4                          (volatile unsigned long *)0x80032750
#define P_I2S_READ_ADR_D5                          (volatile unsigned long *)0x80032754
#define P_I2S_READ_ADR_D6                          (volatile unsigned long *)0x80032758
#define P_I2S_READ_ADR_D7                          (volatile unsigned long *)0x8003275c
#define P_I2S_READ_ADR_D8                          (volatile unsigned long *)0x80032760
#define P_I2S_READ_ADR_D9                          (volatile unsigned long *)0x80032764
#define P_I2S_READ_ADR_DA                          (volatile unsigned long *)0x80032768
#define P_I2S_READ_ADR_DB                          (volatile unsigned long *)0x8003276c
#define P_I2S_READ_ADR_DC                          (volatile unsigned long *)0x80032770
#define P_I2S_READ_ADR_DD                          (volatile unsigned long *)0x80032774
#define P_I2S_READ_ADR_DE                          (volatile unsigned long *)0x80032778
#define P_I2S_READ_ADR_DF                          (volatile unsigned long *)0x8003277c
#define P_I2S_READ_ADR_E0                          (volatile unsigned long *)0x80032780
#define P_I2S_READ_ADR_E1                          (volatile unsigned long *)0x80032784
#define P_I2S_READ_ADR_E2                          (volatile unsigned long *)0x80032788
#define P_I2S_READ_ADR_E3                          (volatile unsigned long *)0x8003278c
#define P_I2S_READ_ADR_E4                          (volatile unsigned long *)0x80032790
#define P_I2S_READ_ADR_E5                          (volatile unsigned long *)0x80032794
#define P_I2S_READ_ADR_E6                          (volatile unsigned long *)0x80032798
#define P_I2S_READ_ADR_E7                          (volatile unsigned long *)0x8003279c
#define P_I2S_READ_ADR_E8                          (volatile unsigned long *)0x800327a0
#define P_I2S_READ_ADR_E9                          (volatile unsigned long *)0x800327a4
#define P_I2S_READ_ADR_EA                          (volatile unsigned long *)0x800327a8
#define P_I2S_READ_ADR_EB                          (volatile unsigned long *)0x800327ac
#define P_I2S_READ_ADR_EC                          (volatile unsigned long *)0x800327b0
#define P_I2S_READ_ADR_ED                          (volatile unsigned long *)0x800327b4
#define P_I2S_READ_ADR_EE                          (volatile unsigned long *)0x800327b8
#define P_I2S_READ_ADR_EF                          (volatile unsigned long *)0x800327bc
#define P_I2S_READ_ADR_F0                          (volatile unsigned long *)0x800327c0
#define P_I2S_READ_ADR_F1                          (volatile unsigned long *)0x800327c4
#define P_I2S_READ_ADR_F2                          (volatile unsigned long *)0x800327c8
#define P_I2S_READ_ADR_F3                          (volatile unsigned long *)0x800327cc
#define P_I2S_READ_ADR_F4                          (volatile unsigned long *)0x800327d0
#define P_I2S_READ_ADR_F5                          (volatile unsigned long *)0x800327d4
#define P_I2S_READ_ADR_F6                          (volatile unsigned long *)0x800327d8
#define P_I2S_READ_ADR_F7                          (volatile unsigned long *)0x800327dc
#define P_I2S_READ_ADR_F8                          (volatile unsigned long *)0x800327e0
#define P_I2S_READ_ADR_F9                          (volatile unsigned long *)0x800327e4
#define P_I2S_READ_ADR_FA                          (volatile unsigned long *)0x800327e8
#define P_I2S_READ_ADR_FB                          (volatile unsigned long *)0x800327ec
#define P_I2S_READ_ADR_FC                          (volatile unsigned long *)0x800327f0
#define P_I2S_READ_ADR_FD                          (volatile unsigned long *)0x800327f4
#define P_I2S_READ_ADR_FE                          (volatile unsigned long *)0x800327f8
#define P_I2S_READ_ADR_FF                          (volatile unsigned long *)0x800327fc
// -----------------------------------------------
// CBUS_BASE:  I2S_WRITE_CBUS_BASE = 0x0a
// -----------------------------------------------
#define P_I2S_WRITE_ADR_00                         (volatile unsigned long *)0x80032800
#define P_I2S_WRITE_ADR_01                         (volatile unsigned long *)0x80032804
#define P_I2S_WRITE_ADR_02                         (volatile unsigned long *)0x80032808
#define P_I2S_WRITE_ADR_03                         (volatile unsigned long *)0x8003280c
#define P_I2S_WRITE_ADR_04                         (volatile unsigned long *)0x80032810
#define P_I2S_WRITE_ADR_05                         (volatile unsigned long *)0x80032814
#define P_I2S_WRITE_ADR_06                         (volatile unsigned long *)0x80032818
#define P_I2S_WRITE_ADR_07                         (volatile unsigned long *)0x8003281c
#define P_I2S_WRITE_ADR_08                         (volatile unsigned long *)0x80032820
#define P_I2S_WRITE_ADR_09                         (volatile unsigned long *)0x80032824
#define P_I2S_WRITE_ADR_0A                         (volatile unsigned long *)0x80032828
#define P_I2S_WRITE_ADR_0B                         (volatile unsigned long *)0x8003282c
#define P_I2S_WRITE_ADR_0C                         (volatile unsigned long *)0x80032830
#define P_I2S_WRITE_ADR_0D                         (volatile unsigned long *)0x80032834
#define P_I2S_WRITE_ADR_0E                         (volatile unsigned long *)0x80032838
#define P_I2S_WRITE_ADR_0F                         (volatile unsigned long *)0x8003283c
#define P_I2S_WRITE_ADR_10                         (volatile unsigned long *)0x80032840
#define P_I2S_WRITE_ADR_11                         (volatile unsigned long *)0x80032844
#define P_I2S_WRITE_ADR_12                         (volatile unsigned long *)0x80032848
#define P_I2S_WRITE_ADR_13                         (volatile unsigned long *)0x8003284c
#define P_I2S_WRITE_ADR_14                         (volatile unsigned long *)0x80032850
#define P_I2S_WRITE_ADR_15                         (volatile unsigned long *)0x80032854
#define P_I2S_WRITE_ADR_16                         (volatile unsigned long *)0x80032858
#define P_I2S_WRITE_ADR_17                         (volatile unsigned long *)0x8003285c
#define P_I2S_WRITE_ADR_18                         (volatile unsigned long *)0x80032860
#define P_I2S_WRITE_ADR_19                         (volatile unsigned long *)0x80032864
#define P_I2S_WRITE_ADR_1A                         (volatile unsigned long *)0x80032868
#define P_I2S_WRITE_ADR_1B                         (volatile unsigned long *)0x8003286c
#define P_I2S_WRITE_ADR_1C                         (volatile unsigned long *)0x80032870
#define P_I2S_WRITE_ADR_1D                         (volatile unsigned long *)0x80032874
#define P_I2S_WRITE_ADR_1E                         (volatile unsigned long *)0x80032878
#define P_I2S_WRITE_ADR_1F                         (volatile unsigned long *)0x8003287c
#define P_I2S_WRITE_ADR_20                         (volatile unsigned long *)0x80032880
#define P_I2S_WRITE_ADR_21                         (volatile unsigned long *)0x80032884
#define P_I2S_WRITE_ADR_22                         (volatile unsigned long *)0x80032888
#define P_I2S_WRITE_ADR_23                         (volatile unsigned long *)0x8003288c
#define P_I2S_WRITE_ADR_24                         (volatile unsigned long *)0x80032890
#define P_I2S_WRITE_ADR_25                         (volatile unsigned long *)0x80032894
#define P_I2S_WRITE_ADR_26                         (volatile unsigned long *)0x80032898
#define P_I2S_WRITE_ADR_27                         (volatile unsigned long *)0x8003289c
#define P_I2S_WRITE_ADR_28                         (volatile unsigned long *)0x800328a0
#define P_I2S_WRITE_ADR_29                         (volatile unsigned long *)0x800328a4
#define P_I2S_WRITE_ADR_2A                         (volatile unsigned long *)0x800328a8
#define P_I2S_WRITE_ADR_2B                         (volatile unsigned long *)0x800328ac
#define P_I2S_WRITE_ADR_2C                         (volatile unsigned long *)0x800328b0
#define P_I2S_WRITE_ADR_2D                         (volatile unsigned long *)0x800328b4
#define P_I2S_WRITE_ADR_2E                         (volatile unsigned long *)0x800328b8
#define P_I2S_WRITE_ADR_2F                         (volatile unsigned long *)0x800328bc
#define P_I2S_WRITE_ADR_30                         (volatile unsigned long *)0x800328c0
#define P_I2S_WRITE_ADR_31                         (volatile unsigned long *)0x800328c4
#define P_I2S_WRITE_ADR_32                         (volatile unsigned long *)0x800328c8
#define P_I2S_WRITE_ADR_33                         (volatile unsigned long *)0x800328cc
#define P_I2S_WRITE_ADR_34                         (volatile unsigned long *)0x800328d0
#define P_I2S_WRITE_ADR_35                         (volatile unsigned long *)0x800328d4
#define P_I2S_WRITE_ADR_36                         (volatile unsigned long *)0x800328d8
#define P_I2S_WRITE_ADR_37                         (volatile unsigned long *)0x800328dc
#define P_I2S_WRITE_ADR_38                         (volatile unsigned long *)0x800328e0
#define P_I2S_WRITE_ADR_39                         (volatile unsigned long *)0x800328e4
#define P_I2S_WRITE_ADR_3A                         (volatile unsigned long *)0x800328e8
#define P_I2S_WRITE_ADR_3B                         (volatile unsigned long *)0x800328ec
#define P_I2S_WRITE_ADR_3C                         (volatile unsigned long *)0x800328f0
#define P_I2S_WRITE_ADR_3D                         (volatile unsigned long *)0x800328f4
#define P_I2S_WRITE_ADR_3E                         (volatile unsigned long *)0x800328f8
#define P_I2S_WRITE_ADR_3F                         (volatile unsigned long *)0x800328fc
#define P_I2S_WRITE_ADR_40                         (volatile unsigned long *)0x80032900
#define P_I2S_WRITE_ADR_41                         (volatile unsigned long *)0x80032904
#define P_I2S_WRITE_ADR_42                         (volatile unsigned long *)0x80032908
#define P_I2S_WRITE_ADR_43                         (volatile unsigned long *)0x8003290c
#define P_I2S_WRITE_ADR_44                         (volatile unsigned long *)0x80032910
#define P_I2S_WRITE_ADR_45                         (volatile unsigned long *)0x80032914
#define P_I2S_WRITE_ADR_46                         (volatile unsigned long *)0x80032918
#define P_I2S_WRITE_ADR_47                         (volatile unsigned long *)0x8003291c
#define P_I2S_WRITE_ADR_48                         (volatile unsigned long *)0x80032920
#define P_I2S_WRITE_ADR_49                         (volatile unsigned long *)0x80032924
#define P_I2S_WRITE_ADR_4A                         (volatile unsigned long *)0x80032928
#define P_I2S_WRITE_ADR_4B                         (volatile unsigned long *)0x8003292c
#define P_I2S_WRITE_ADR_4C                         (volatile unsigned long *)0x80032930
#define P_I2S_WRITE_ADR_4D                         (volatile unsigned long *)0x80032934
#define P_I2S_WRITE_ADR_4E                         (volatile unsigned long *)0x80032938
#define P_I2S_WRITE_ADR_4F                         (volatile unsigned long *)0x8003293c
#define P_I2S_WRITE_ADR_50                         (volatile unsigned long *)0x80032940
#define P_I2S_WRITE_ADR_51                         (volatile unsigned long *)0x80032944
#define P_I2S_WRITE_ADR_52                         (volatile unsigned long *)0x80032948
#define P_I2S_WRITE_ADR_53                         (volatile unsigned long *)0x8003294c
#define P_I2S_WRITE_ADR_54                         (volatile unsigned long *)0x80032950
#define P_I2S_WRITE_ADR_55                         (volatile unsigned long *)0x80032954
#define P_I2S_WRITE_ADR_56                         (volatile unsigned long *)0x80032958
#define P_I2S_WRITE_ADR_57                         (volatile unsigned long *)0x8003295c
#define P_I2S_WRITE_ADR_58                         (volatile unsigned long *)0x80032960
#define P_I2S_WRITE_ADR_59                         (volatile unsigned long *)0x80032964
#define P_I2S_WRITE_ADR_5A                         (volatile unsigned long *)0x80032968
#define P_I2S_WRITE_ADR_5B                         (volatile unsigned long *)0x8003296c
#define P_I2S_WRITE_ADR_5C                         (volatile unsigned long *)0x80032970
#define P_I2S_WRITE_ADR_5D                         (volatile unsigned long *)0x80032974
#define P_I2S_WRITE_ADR_5E                         (volatile unsigned long *)0x80032978
#define P_I2S_WRITE_ADR_5F                         (volatile unsigned long *)0x8003297c
#define P_I2S_WRITE_ADR_60                         (volatile unsigned long *)0x80032980
#define P_I2S_WRITE_ADR_61                         (volatile unsigned long *)0x80032984
#define P_I2S_WRITE_ADR_62                         (volatile unsigned long *)0x80032988
#define P_I2S_WRITE_ADR_63                         (volatile unsigned long *)0x8003298c
#define P_I2S_WRITE_ADR_64                         (volatile unsigned long *)0x80032990
#define P_I2S_WRITE_ADR_65                         (volatile unsigned long *)0x80032994
#define P_I2S_WRITE_ADR_66                         (volatile unsigned long *)0x80032998
#define P_I2S_WRITE_ADR_67                         (volatile unsigned long *)0x8003299c
#define P_I2S_WRITE_ADR_68                         (volatile unsigned long *)0x800329a0
#define P_I2S_WRITE_ADR_69                         (volatile unsigned long *)0x800329a4
#define P_I2S_WRITE_ADR_6A                         (volatile unsigned long *)0x800329a8
#define P_I2S_WRITE_ADR_6B                         (volatile unsigned long *)0x800329ac
#define P_I2S_WRITE_ADR_6C                         (volatile unsigned long *)0x800329b0
#define P_I2S_WRITE_ADR_6D                         (volatile unsigned long *)0x800329b4
#define P_I2S_WRITE_ADR_6E                         (volatile unsigned long *)0x800329b8
#define P_I2S_WRITE_ADR_6F                         (volatile unsigned long *)0x800329bc
#define P_I2S_WRITE_ADR_70                         (volatile unsigned long *)0x800329c0
#define P_I2S_WRITE_ADR_71                         (volatile unsigned long *)0x800329c4
#define P_I2S_WRITE_ADR_72                         (volatile unsigned long *)0x800329c8
#define P_I2S_WRITE_ADR_73                         (volatile unsigned long *)0x800329cc
#define P_I2S_WRITE_ADR_74                         (volatile unsigned long *)0x800329d0
#define P_I2S_WRITE_ADR_75                         (volatile unsigned long *)0x800329d4
#define P_I2S_WRITE_ADR_76                         (volatile unsigned long *)0x800329d8
#define P_I2S_WRITE_ADR_77                         (volatile unsigned long *)0x800329dc
#define P_I2S_WRITE_ADR_78                         (volatile unsigned long *)0x800329e0
#define P_I2S_WRITE_ADR_79                         (volatile unsigned long *)0x800329e4
#define P_I2S_WRITE_ADR_7A                         (volatile unsigned long *)0x800329e8
#define P_I2S_WRITE_ADR_7B                         (volatile unsigned long *)0x800329ec
#define P_I2S_WRITE_ADR_7C                         (volatile unsigned long *)0x800329f0
#define P_I2S_WRITE_ADR_7D                         (volatile unsigned long *)0x800329f4
#define P_I2S_WRITE_ADR_7E                         (volatile unsigned long *)0x800329f8
#define P_I2S_WRITE_ADR_7F                         (volatile unsigned long *)0x800329fc
#define P_I2S_WRITE_ADR_80                         (volatile unsigned long *)0x80032a00
#define P_I2S_WRITE_ADR_81                         (volatile unsigned long *)0x80032a04
#define P_I2S_WRITE_ADR_82                         (volatile unsigned long *)0x80032a08
#define P_I2S_WRITE_ADR_83                         (volatile unsigned long *)0x80032a0c
#define P_I2S_WRITE_ADR_84                         (volatile unsigned long *)0x80032a10
#define P_I2S_WRITE_ADR_85                         (volatile unsigned long *)0x80032a14
#define P_I2S_WRITE_ADR_86                         (volatile unsigned long *)0x80032a18
#define P_I2S_WRITE_ADR_87                         (volatile unsigned long *)0x80032a1c
#define P_I2S_WRITE_ADR_88                         (volatile unsigned long *)0x80032a20
#define P_I2S_WRITE_ADR_89                         (volatile unsigned long *)0x80032a24
#define P_I2S_WRITE_ADR_8A                         (volatile unsigned long *)0x80032a28
#define P_I2S_WRITE_ADR_8B                         (volatile unsigned long *)0x80032a2c
#define P_I2S_WRITE_ADR_8C                         (volatile unsigned long *)0x80032a30
#define P_I2S_WRITE_ADR_8D                         (volatile unsigned long *)0x80032a34
#define P_I2S_WRITE_ADR_8E                         (volatile unsigned long *)0x80032a38
#define P_I2S_WRITE_ADR_8F                         (volatile unsigned long *)0x80032a3c
#define P_I2S_WRITE_ADR_90                         (volatile unsigned long *)0x80032a40
#define P_I2S_WRITE_ADR_91                         (volatile unsigned long *)0x80032a44
#define P_I2S_WRITE_ADR_92                         (volatile unsigned long *)0x80032a48
#define P_I2S_WRITE_ADR_93                         (volatile unsigned long *)0x80032a4c
#define P_I2S_WRITE_ADR_94                         (volatile unsigned long *)0x80032a50
#define P_I2S_WRITE_ADR_95                         (volatile unsigned long *)0x80032a54
#define P_I2S_WRITE_ADR_96                         (volatile unsigned long *)0x80032a58
#define P_I2S_WRITE_ADR_97                         (volatile unsigned long *)0x80032a5c
#define P_I2S_WRITE_ADR_98                         (volatile unsigned long *)0x80032a60
#define P_I2S_WRITE_ADR_99                         (volatile unsigned long *)0x80032a64
#define P_I2S_WRITE_ADR_9A                         (volatile unsigned long *)0x80032a68
#define P_I2S_WRITE_ADR_9B                         (volatile unsigned long *)0x80032a6c
#define P_I2S_WRITE_ADR_9C                         (volatile unsigned long *)0x80032a70
#define P_I2S_WRITE_ADR_9D                         (volatile unsigned long *)0x80032a74
#define P_I2S_WRITE_ADR_9E                         (volatile unsigned long *)0x80032a78
#define P_I2S_WRITE_ADR_9F                         (volatile unsigned long *)0x80032a7c
#define P_I2S_WRITE_ADR_A0                         (volatile unsigned long *)0x80032a80
#define P_I2S_WRITE_ADR_A1                         (volatile unsigned long *)0x80032a84
#define P_I2S_WRITE_ADR_A2                         (volatile unsigned long *)0x80032a88
#define P_I2S_WRITE_ADR_A3                         (volatile unsigned long *)0x80032a8c
#define P_I2S_WRITE_ADR_A4                         (volatile unsigned long *)0x80032a90
#define P_I2S_WRITE_ADR_A5                         (volatile unsigned long *)0x80032a94
#define P_I2S_WRITE_ADR_A6                         (volatile unsigned long *)0x80032a98
#define P_I2S_WRITE_ADR_A7                         (volatile unsigned long *)0x80032a9c
#define P_I2S_WRITE_ADR_A8                         (volatile unsigned long *)0x80032aa0
#define P_I2S_WRITE_ADR_A9                         (volatile unsigned long *)0x80032aa4
#define P_I2S_WRITE_ADR_AA                         (volatile unsigned long *)0x80032aa8
#define P_I2S_WRITE_ADR_AB                         (volatile unsigned long *)0x80032aac
#define P_I2S_WRITE_ADR_AC                         (volatile unsigned long *)0x80032ab0
#define P_I2S_WRITE_ADR_AD                         (volatile unsigned long *)0x80032ab4
#define P_I2S_WRITE_ADR_AE                         (volatile unsigned long *)0x80032ab8
#define P_I2S_WRITE_ADR_AF                         (volatile unsigned long *)0x80032abc
#define P_I2S_WRITE_ADR_B0                         (volatile unsigned long *)0x80032ac0
#define P_I2S_WRITE_ADR_B1                         (volatile unsigned long *)0x80032ac4
#define P_I2S_WRITE_ADR_B2                         (volatile unsigned long *)0x80032ac8
#define P_I2S_WRITE_ADR_B3                         (volatile unsigned long *)0x80032acc
#define P_I2S_WRITE_ADR_B4                         (volatile unsigned long *)0x80032ad0
#define P_I2S_WRITE_ADR_B5                         (volatile unsigned long *)0x80032ad4
#define P_I2S_WRITE_ADR_B6                         (volatile unsigned long *)0x80032ad8
#define P_I2S_WRITE_ADR_B7                         (volatile unsigned long *)0x80032adc
#define P_I2S_WRITE_ADR_B8                         (volatile unsigned long *)0x80032ae0
#define P_I2S_WRITE_ADR_B9                         (volatile unsigned long *)0x80032ae4
#define P_I2S_WRITE_ADR_BA                         (volatile unsigned long *)0x80032ae8
#define P_I2S_WRITE_ADR_BB                         (volatile unsigned long *)0x80032aec
#define P_I2S_WRITE_ADR_BC                         (volatile unsigned long *)0x80032af0
#define P_I2S_WRITE_ADR_BD                         (volatile unsigned long *)0x80032af4
#define P_I2S_WRITE_ADR_BE                         (volatile unsigned long *)0x80032af8
#define P_I2S_WRITE_ADR_BF                         (volatile unsigned long *)0x80032afc
#define P_I2S_WRITE_ADR_C0                         (volatile unsigned long *)0x80032b00
#define P_I2S_WRITE_ADR_C1                         (volatile unsigned long *)0x80032b04
#define P_I2S_WRITE_ADR_C2                         (volatile unsigned long *)0x80032b08
#define P_I2S_WRITE_ADR_C3                         (volatile unsigned long *)0x80032b0c
#define P_I2S_WRITE_ADR_C4                         (volatile unsigned long *)0x80032b10
#define P_I2S_WRITE_ADR_C5                         (volatile unsigned long *)0x80032b14
#define P_I2S_WRITE_ADR_C6                         (volatile unsigned long *)0x80032b18
#define P_I2S_WRITE_ADR_C7                         (volatile unsigned long *)0x80032b1c
#define P_I2S_WRITE_ADR_C8                         (volatile unsigned long *)0x80032b20
#define P_I2S_WRITE_ADR_C9                         (volatile unsigned long *)0x80032b24
#define P_I2S_WRITE_ADR_CA                         (volatile unsigned long *)0x80032b28
#define P_I2S_WRITE_ADR_CB                         (volatile unsigned long *)0x80032b2c
#define P_I2S_WRITE_ADR_CC                         (volatile unsigned long *)0x80032b30
#define P_I2S_WRITE_ADR_CD                         (volatile unsigned long *)0x80032b34
#define P_I2S_WRITE_ADR_CE                         (volatile unsigned long *)0x80032b38
#define P_I2S_WRITE_ADR_CF                         (volatile unsigned long *)0x80032b3c
#define P_I2S_WRITE_ADR_D0                         (volatile unsigned long *)0x80032b40
#define P_I2S_WRITE_ADR_D1                         (volatile unsigned long *)0x80032b44
#define P_I2S_WRITE_ADR_D2                         (volatile unsigned long *)0x80032b48
#define P_I2S_WRITE_ADR_D3                         (volatile unsigned long *)0x80032b4c
#define P_I2S_WRITE_ADR_D4                         (volatile unsigned long *)0x80032b50
#define P_I2S_WRITE_ADR_D5                         (volatile unsigned long *)0x80032b54
#define P_I2S_WRITE_ADR_D6                         (volatile unsigned long *)0x80032b58
#define P_I2S_WRITE_ADR_D7                         (volatile unsigned long *)0x80032b5c
#define P_I2S_WRITE_ADR_D8                         (volatile unsigned long *)0x80032b60
#define P_I2S_WRITE_ADR_D9                         (volatile unsigned long *)0x80032b64
#define P_I2S_WRITE_ADR_DA                         (volatile unsigned long *)0x80032b68
#define P_I2S_WRITE_ADR_DB                         (volatile unsigned long *)0x80032b6c
#define P_I2S_WRITE_ADR_DC                         (volatile unsigned long *)0x80032b70
#define P_I2S_WRITE_ADR_DD                         (volatile unsigned long *)0x80032b74
#define P_I2S_WRITE_ADR_DE                         (volatile unsigned long *)0x80032b78
#define P_I2S_WRITE_ADR_DF                         (volatile unsigned long *)0x80032b7c
#define P_I2S_WRITE_ADR_E0                         (volatile unsigned long *)0x80032b80
#define P_I2S_WRITE_ADR_E1                         (volatile unsigned long *)0x80032b84
#define P_I2S_WRITE_ADR_E2                         (volatile unsigned long *)0x80032b88
#define P_I2S_WRITE_ADR_E3                         (volatile unsigned long *)0x80032b8c
#define P_I2S_WRITE_ADR_E4                         (volatile unsigned long *)0x80032b90
#define P_I2S_WRITE_ADR_E5                         (volatile unsigned long *)0x80032b94
#define P_I2S_WRITE_ADR_E6                         (volatile unsigned long *)0x80032b98
#define P_I2S_WRITE_ADR_E7                         (volatile unsigned long *)0x80032b9c
#define P_I2S_WRITE_ADR_E8                         (volatile unsigned long *)0x80032ba0
#define P_I2S_WRITE_ADR_E9                         (volatile unsigned long *)0x80032ba4
#define P_I2S_WRITE_ADR_EA                         (volatile unsigned long *)0x80032ba8
#define P_I2S_WRITE_ADR_EB                         (volatile unsigned long *)0x80032bac
#define P_I2S_WRITE_ADR_EC                         (volatile unsigned long *)0x80032bb0
#define P_I2S_WRITE_ADR_ED                         (volatile unsigned long *)0x80032bb4
#define P_I2S_WRITE_ADR_EE                         (volatile unsigned long *)0x80032bb8
#define P_I2S_WRITE_ADR_EF                         (volatile unsigned long *)0x80032bbc
#define P_I2S_WRITE_ADR_F0                         (volatile unsigned long *)0x80032bc0
#define P_I2S_WRITE_ADR_F1                         (volatile unsigned long *)0x80032bc4
#define P_I2S_WRITE_ADR_F2                         (volatile unsigned long *)0x80032bc8
#define P_I2S_WRITE_ADR_F3                         (volatile unsigned long *)0x80032bcc
#define P_I2S_WRITE_ADR_F4                         (volatile unsigned long *)0x80032bd0
#define P_I2S_WRITE_ADR_F5                         (volatile unsigned long *)0x80032bd4
#define P_I2S_WRITE_ADR_F6                         (volatile unsigned long *)0x80032bd8
#define P_I2S_WRITE_ADR_F7                         (volatile unsigned long *)0x80032bdc
#define P_I2S_WRITE_ADR_F8                         (volatile unsigned long *)0x80032be0
#define P_I2S_WRITE_ADR_F9                         (volatile unsigned long *)0x80032be4
#define P_I2S_WRITE_ADR_FA                         (volatile unsigned long *)0x80032be8
#define P_I2S_WRITE_ADR_FB                         (volatile unsigned long *)0x80032bec
#define P_I2S_WRITE_ADR_FC                         (volatile unsigned long *)0x80032bf0
#define P_I2S_WRITE_ADR_FD                         (volatile unsigned long *)0x80032bf4
#define P_I2S_WRITE_ADR_FE                         (volatile unsigned long *)0x80032bf8
#define P_I2S_WRITE_ADR_FF                         (volatile unsigned long *)0x80032bfc
//
// Reading file:  vpu_reg.h
//
// synopsys translate_off
// synopsys translate_on
// -------------------------------------------------------------------
// Peripheral 4   (APB slave 4)
// -------------------------------------------------------------------
// -----------------------------------------------
// CBUS_BASE:  VPU_CBUS_BASE = 0x04
// -----------------------------------------------
#define P_VP_CTRL                                  (volatile unsigned long *)0x80031000
//Bit 31:30      reg_hvsync_int_mux         , unsigned, default = 0
//Bit 29,        reg_fsm_clk_en             , unsigned, default = 1
//Bit 28,        reserved
//Bit 27:25,     reg_pat_new_mode           , 0:old (colorbar, ramp, etc.), 1: triangle, 2:palette, 3 or else: grd9&gry8,. unsigned, default = 1
//Bit 24,        reg_pat_grd9_act_def       .  unsigned, default = 1
//Bit 23,        reg_pat_grd9_dis_def       .  unsigned, default = 1
//Bit 22,        reg_pat_gry8_act_def       .  unsigned, default = 1
//Bit 21,        reg_pat_gry8_dis_def       .  unsigned, default = 1
//Bit 20,        reg_pat_grd9_en            .  unsigned, default = 0
//Bit 19,        reg_pat_gry8_en            .  unsigned, default = 0
//Bit 18,        reg_minlvds_sel            .  unsigned, default = 0
//Bit 17,        reg_vx1lvds_insel          .  unsigned, default = 0
//Bit 16,        reg_gamma_mode             : 0 gamma before blending, 1 gamma after white balance. unsigned, default = 1
//Bit 15,        reserved
//Bit 14,        reg_vx1lvds_en            .   unsigned, default = 0
//Bit 13,        reg_demura_en             .   unsigned, default = 0
//Bit 12,        reg_blend_en              .   unsigned, default = 0
//Bit 11,        reg_sosd_en               .   unsigned, default = 0
//Bit 10,        reg_csc0_en               , set to 0 while reg_pat_en = 0.   unsigned, default = 1
//Bit  9,        reg_dnlp_en               .   unsigned, default = 1
//Bit  8,        reg_csc1_en               .   unsigned, default = 1
//Bit  7,        reg_cm2_en                .   unsigned, default = 0
//Bit  6,        reg_rgbbst_en               enable singnal for rgb contrast and brightness. unsigned, default = 1
//Bit  5,        reg_adj_en                .   unsigned, default = 1
//Bit  4,        reg_wb_en                 : 0 no gain and offset; 1: enable gain and offset.   unsigned, default = 1
//Bit  3,        reg_gamma_en              : 0 no  gamma, 1 enable gamma.   unsigned, default = 1
//Bit  2,        reg_pat_en                .   unsigned, default = 1
//Bit  1,        reg_tmgen_en              .   unsigned, default = 0
//Bit  0,        reg_vpu_en                .   unsigned, default = 0
#define P_VP_ENM_SYNC_MODE                         (volatile unsigned long *)0x80031004
//Bit 31: 0,    reg_enm_sync_mode          .   unsigned, default = 0
#define P_VP_GCLK_CTRL                             (volatile unsigned long *)0x80031008
//Bit 31: 0,    reg_gclk_ctrl              .   unsigned, default = 0
#define P_VP_RAM_MEM_PD                            (volatile unsigned long *)0x8003100c
//Bit 31:16,    reg_gclk_ctrl2             .   unsigned, default = 0
//Bit 15: 0,    reg_mem_pd                 .   unsigned, default = 0
#define P_VP_BYPASS_CTRL                           (volatile unsigned long *)0x80031014
//Bit 31:12,     reserved
//Bit 11,        reg_demura_bypass         .   unsigned, default = 0
//Bit 10,        reg_blend_bypass          .   unsigned, default = 0
//Bit  9,        reg_sosd_bypass           .   unsigned, default = 0
//Bit  8,        reg_csc0_bypass           .   unsigned, default = 0
//Bit  7,        reg_dnlp_bypass           .   unsigned, default = 0
//Bit  6,        reg_csc1_bypass           .   unsigned, default = 0
//Bit  5,        reg_cm2_bypass            .   unsigned, default = 0
//Bit  4,        reg_rgbbst_bypass         .   unsigned, default = 0
//Bit  3,        reg_adj_bypass            .   unsigned, default = 0
//Bit  2,        reg_wb_bypass             .   unsigned, default = 0
//Bit  1,        reg_gamma_bypass          .   unsigned, default = 0
//Bit  0,        reg_pat_bypass            .   unsigned, default = 0
#define P_VP_BPM_SYNC_MODE                         (volatile unsigned long *)0x80031018
//Bit 31: 0,     reg_bpm_sync_mode          .   unsigned, default = 0
#define P_VP_IMG_SIZE                              (volatile unsigned long *)0x8003101c
//Bit 31:30,     reserved
//Bit 29:16,     reg_img_vsize_m1           .   unsigned, default = 1079
//Bit 15:14,     reserved
//Bit 13: 0,     reg_img_hsize_m1           .   unsigned, default = 1919
#define P_VP_VDATA_SWAP                            (volatile unsigned long *)0x80031020
//Bit 31:23,     reserved
//Bit 22:20,     reg_vpu_sync_out_sel      .   unsigned, default = 0
//Bit 19,        reserved
//Bit 18:16,     reg_vpu_dbg_sync_sel      .   unsigned, default = 0
//Bit 15:13,     reserved
//Bit 12:8,      reg_vdata_out_swap        .   unsigned, default = 0   [3:0]:0->[d2,d1,d0]; 1->[d2,d0,d1]; 2->[d1,d2,d0]; 3->[d1,d0,d2]; 4->[d0,d2,d1]; 5->[d0,d1,d2];
//Bit 7: 5,      reserved
//Bit 4: 0,      reg_vdata_in_swap         .   unsigned, default = 0   [3:0]:0->[d2,d1,d0]; 1->[d2,d0,d1]; 2->[d1,d2,d0]; 3->[d1,d0,d2]; 4->[d0,d2,d1]; 5->[d0,d1,d2];
#define P_VP_TMGEN_HTOTAL                          (volatile unsigned long *)0x80031028
//Bit    31,     reg_tmgen_freerun.        .   unsigned, default = 1
//Bit    30,     reg_tmgen_in_hs_vs_aligned .  unsigned, default = 1
//Bit 29:16,     reg_tmgen_vtotal_m1       .   unsigned, default = 1124
//Bit 15:14,     reserved
//Bit 13: 0,     reg_tmgen_htotal_m1       .   unsigned, default = 1099
#define P_VP_TMGEN_HAVON_H                         (volatile unsigned long *)0x8003102c
//Bit 31:30,     reserved
//Bit 29:16,     reg_tmgen_havon_end       .   unsigned, default = 1055
//Bit 15:14,     reserved
//Bit 13: 0,     reg_tmgen_havon_begin     .   unsigned, default = 96
#define P_VP_TMGEN_VAVON_V                         (volatile unsigned long *)0x80031030
//Bit 31:30,     reserved
//Bit 29:16,     reg_tmgen_vavon_eline     .   unsigned, default = 1120
//Bit 15:14,     reserved
//Bit 13: 0,     reg_tmgen_vavon_bline     .   unsigned, default = 41
#define P_VP_TMGEN_HSO_H                           (volatile unsigned long *)0x80031034
//Bit 31:30,     reserved
//Bit 29:16,     reg_tmgen_hso_end         .   unsigned, default = 21
//Bit 15:14,     reserved
//Bit 13: 0,     reg_tmgen_hso_begin       .   unsigned, default = 0
#define P_VP_TMGEN_VSO_H                           (volatile unsigned long *)0x80031038
//Bit 31:30,     reserved
//Bit 29:16,     reg_tmgen_vso_end         .   unsigned, default = 1124
//Bit 15:14,     reserved
//Bit 13: 0,     reg_tmgen_vso_begin       .   unsigned, default = 0
#define P_VP_TMGEN_VSO_V                           (volatile unsigned long *)0x8003103c
//Bit 31:30,     reserved
//Bit 29:16,     reg_tmgen_vso_eline        .   unsigned, default = 4
//Bit 15:14,     reserved
//Bit 13: 0,     reg_tmgen_vso_bline        .   unsigned, default = 0
#define P_VP_PAT_3D_MOD                            (volatile unsigned long *)0x80031040
//Bit 31:20,     reserved
//Bit 19: 8,     reg_pat_3d_xoffst          need s12 for larger adjustments enough?  signed, default = 10
//Bit  7: 5,     reserved
//Bit  4: 2,     reg_pat_3d_mode            0:no 3d, 1:L/R, 2: T/B, 3:horizontal interleave,4 and else: vertical interleave.  unsigned, default = 0
//Bit  1,        reg_pat_3d_clr_def         0:use generated pat for 3d, 1: define 2 different color for 3d.  unsigned, default = 0
//Bit  0,        reg_pat_3d_ext_mod         0:zero pad, 1: repeat.  unsigned, default = 0
#define P_VP_PAT_3D_XY_MID                         (volatile unsigned long *)0x80031044
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_3d_xmid            .   unsigned, default = 960
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_3d_ymid            .   unsigned, default = 540
#define P_VP_PAT_XY_MODE                           (volatile unsigned long *)0x80031048
//Bit 31: 9,     reserved
//Bit  8,        reg_pat_xy_inv             invert x/y coordinates.   unsigned, default = 0
//Bit  7: 5,     reg_pat_xmode              0: raster/bar16/burst; 1; ramp-up; 2/3: 256 gain for this direction. unsigned, default = 1
//Bit  4: 2,     reg_pat_ymode              0: raster/bar16/burst; 1; ramp-up; 2/3: 256 gain for this direction. unsigned, default = 3
//Bit  1,        reg_pat_xinvt              .   unsigned, default = 0
//Bit  0,        reg_pat_yinvt              .   unsigned, default = 0
#define P_VP_PAT_XY_SCL                            (volatile unsigned long *)0x8003104c
//Bit 31:28,     reserved
//Bit 27:16,     reg_pat_xidx_scale         : index scale.   unsigned, default = 34
//Bit 15:12,     reserved
//Bit 11: 0,     reg_pat_yidx_scale         : index scale.   unsigned, default = 60
#define P_VP_PAT_XY_OF_SHFT                        (volatile unsigned long *)0x80031050
//Bit 31:28,     reserved
//Bit 27:16,     reg_pat_xidx_ofset         : index offset.   unsigned, default = 0
//Bit 15: 4,     reg_pat_yidx_ofset         : index offset.   unsigned, default = 0
//Bit  3: 2,     reg_pat_xidx_rshft         : 0~3.   unsigned, default = 0
//Bit  1: 0,     reg_pat_yidx_rshft         : 0~3.   unsigned, default = 0
#define P_VP_PAT_XRMP_SCL                          (volatile unsigned long *)0x80031054
//Bit 31:24,     reserved
//Bit 23:16,     reg_pat_xrmp_scalergb0     .   unsigned, default = 255
//Bit 15: 8,     reg_pat_xrmp_scalergb1     .   unsigned, default = 255
//Bit  7: 0,     reg_pat_xrmp_scalergb2     ramp scale.  unsigned, default = 255
#define P_VP_PAT_YRMP_SCL                          (volatile unsigned long *)0x80031058
//Bit 31:24,     reserved
//Bit 23:16,     reg_pat_yrmp_scalergb0     .   unsigned, default = 255
//Bit 15: 8,     reg_pat_yrmp_scalergb1     .   unsigned, default = 255
//Bit  7: 0,     reg_pat_yrmp_scalergb2     ramp scale.  unsigned, default = 255
#define P_VP_PAT_BAR_R_0_3                         (volatile unsigned long *)0x8003105c
//Bit 31:24,     reg_pat_bar16rgb0_0        .   unsigned, default = 255
//Bit 23:16,     reg_pat_bar16rgb0_1        .   unsigned, default = 255
//Bit 15: 8,     reg_pat_bar16rgb0_2        .   unsigned, default = 0
//Bit  7: 0,     reg_pat_bar16rgb0_3        .   unsigned, default = 0
#define P_VP_PAT_BAR_R_4_7                         (volatile unsigned long *)0x80031060
//Bit 31:24,     reg_pat_bar16rgb0_4        .   unsigned, default = 255
//Bit 23:16,     reg_pat_bar16rgb0_5        .   unsigned, default = 255
//Bit 15: 8,     reg_pat_bar16rgb0_6        .   unsigned, default = 0
//Bit  7: 0,     reg_pat_bar16rgb0_7        .   unsigned, default = 0
#define P_VP_PAT_BAR_R_8_11                        (volatile unsigned long *)0x80031064
//Bit 31:24,     reg_pat_bar16rgb0_8        .   unsigned, default = 32
//Bit 23:16,     reg_pat_bar16rgb0_9        .   unsigned, default = 64
//Bit 15: 8,     reg_pat_bar16rgb0_10       .   unsigned, default = 96
//Bit  7: 0,     reg_pat_bar16rgb0_11       .   unsigned, default = 128
#define P_VP_PAT_BAR_R_12_15                       (volatile unsigned long *)0x80031068
//Bit 31:24,     reg_pat_bar16rgb0_12       .   unsigned, default = 160
//Bit 23:16,     reg_pat_bar16rgb0_13       .   unsigned, default = 192
//Bit 15: 8,     reg_pat_bar16rgb0_14       .   unsigned, default = 224
//Bit  7: 0,     reg_pat_bar16rgb0_15       .   unsigned, default = 255
#define P_VP_PAT_BAR_G_0_3                         (volatile unsigned long *)0x8003106c
//Bit 31:24,     reg_pat_bar16rgb1_0        .   unsigned, default = 255
//Bit 23:16,     reg_pat_bar16rgb1_1        .   unsigned, default = 255
//Bit 15: 8,     reg_pat_bar16rgb1_2        .   unsigned, default = 255
//Bit  7: 0,     reg_pat_bar16rgb1_3        .   unsigned, default = 255
#define P_VP_PAT_BAR_G_4_7                         (volatile unsigned long *)0x80031070
//Bit 31:24,     reg_pat_bar16rgb1_4        .   unsigned, default = 0
//Bit 23:16,     reg_pat_bar16rgb1_5        .   unsigned, default = 0
//Bit 15: 8,     reg_pat_bar16rgb1_6        .   unsigned, default = 0
//Bit  7: 0,     reg_pat_bar16rgb1_7        .   unsigned, default = 180
#define P_VP_PAT_BAR_G_8_11                        (volatile unsigned long *)0x80031074
//Bit 31:24,     reg_pat_bar16rgb1_8        .   unsigned, default = 32
//Bit 23:16,     reg_pat_bar16rgb1_9        .   unsigned, default = 64
//Bit 15: 8,     reg_pat_bar16rgb1_10       .   unsigned, default = 96
//Bit  7: 0,     reg_pat_bar16rgb1_11       .   unsigned, default = 128
#define P_VP_PAT_BAR_G_12_15                       (volatile unsigned long *)0x80031078
//Bit 31:24,     reg_pat_bar16rgb1_12       .   unsigned, default = 160
//Bit 23:16,     reg_pat_bar16rgb1_13       .   unsigned, default = 192
//Bit 15: 8,     reg_pat_bar16rgb1_14       .   unsigned, default = 224
//Bit  7: 0,     reg_pat_bar16rgb1_15       .   unsigned, default = 255
#define P_VP_PAT_BAR_B_0_3                         (volatile unsigned long *)0x8003107c
//Bit 31:24,     reg_pat_bar16rgb2_0        .   unsigned, default = 255
//Bit 23:16,     reg_pat_bar16rgb2_1        .   unsigned, default = 0
//Bit 15: 8,     reg_pat_bar16rgb2_2        .   unsigned, default = 255
//Bit  7: 0,     reg_pat_bar16rgb2_3        .   unsigned, default = 0
#define P_VP_PAT_BAR_B_4_7                         (volatile unsigned long *)0x80031080
//Bit 31:24,     reg_pat_bar16rgb2_4        .   unsigned, default = 255
//Bit 23:16,     reg_pat_bar16rgb2_5        .   unsigned, default = 0
//Bit 15: 8,     reg_pat_bar16rgb2_6        .   unsigned, default = 255
//Bit  7: 0,     reg_pat_bar16rgb2_7        .   unsigned, default = 0
#define P_VP_PAT_BAR_B_8_11                        (volatile unsigned long *)0x80031084
//Bit 31:24,     reg_pat_bar16rgb2_8        .   unsigned, default = 32
//Bit 23:16,     reg_pat_bar16rgb2_9        .   unsigned, default = 64
//Bit 15: 8,     reg_pat_bar16rgb2_10       .   unsigned, default = 96
//Bit  7: 0,     reg_pat_bar16rgb2_11       .   unsigned, default = 128
#define P_VP_PAT_BAR_B_12_15                       (volatile unsigned long *)0x80031088
//Bit 31:24,     reg_pat_bar16rgb2_12       .   unsigned, default = 160
//Bit 23:16,     reg_pat_bar16rgb2_13       .   unsigned, default = 192
//Bit 15: 8,     reg_pat_bar16rgb2_14       .   unsigned, default = 224
//Bit  7: 0,     reg_pat_bar16rgb2_15       .   unsigned, default = 255
#define P_VP_GRD9_XY_SZ                            (volatile unsigned long *)0x8003108c
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_grd9_xsize         .   unsigned, default = 231
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_grd9_ysize         .   unsigned, default = 130
#define P_VP_GRD9_XY_ST0                           (volatile unsigned long *)0x80031090
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_grd9_xstart0       .   unsigned, default = 98
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_grd9_ystart0       .   unsigned, default = 55
#define P_VP_GRD9_XY_ST1                           (volatile unsigned long *)0x80031094
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_grd9_xstart1        .   unsigned, default = 845
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_grd9_ystart1        .   unsigned, default = 475
#define P_VP_GRD9_XY_ST2                           (volatile unsigned long *)0x80031098
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_grd9_xstart2        .   unsigned, default = 1591
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_grd9_ystart2        .   unsigned, default = 895
#define P_VP_GRY8_XY_SZ                            (volatile unsigned long *)0x8003109c
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_gry8_xsize          .   unsigned, default = 192
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_gry8_ysize          .   unsigned, default = 108
#define P_VP_GRY8_XY_ST0                           (volatile unsigned long *)0x800310a0
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_gry8_xstart0        .   unsigned, default = 576
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_gry8_ystart0        .   unsigned, default = 216
#define P_VP_GRY8_XY_ST1                           (volatile unsigned long *)0x800310a4
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_gry8_xstart1        .   unsigned, default = 576
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_gry8_ystart1        .   unsigned, default = 756
#define P_VP_CIR15_RAD                             (volatile unsigned long *)0x800310a8
//Bit 31:16,     reserved
//Bit 15: 2,     reg_pat_cir15_rad           .   unsigned, default = 60
//Bit  1,        reg_pat_cir15_mode              0: circle, 1: rectangle.   unsigned, default = 0
//Bit  0,        reg_pat_cir15_en            .   unsigned, default = 0
#define P_VP_CIR15_SQ_RAD                          (volatile unsigned long *)0x800310ac
//Bit 31:28,     reserved
//Bit 27: 0,     reg_pat_cir15_sqrad         should be (reg_pat_cir15_rad*reg_pat_cir15_rad).  unsigned, default = 3600
#define P_VP_CIR15_X01                             (volatile unsigned long *)0x800310b0
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_cir15_xcent0       .   unsigned, default = 190
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_cir15_xcent1       .   unsigned, default = 570
#define P_VP_CIR15_X23                             (volatile unsigned long *)0x800310b4
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_cir15_xcent2       .   unsigned, default = 960
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_cir15_xcent3       .   unsigned, default = 1340
#define P_VP_CIR15_X4_Y0                           (volatile unsigned long *)0x800310b8
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_cir15_xcent4       .   unsigned, default = 1720
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_cir15_ycent0       .   unsigned, default = 190
#define P_VP_CIR15_Y12                             (volatile unsigned long *)0x800310bc
//Bit 31:30,     reserved
//Bit 29:16,     reg_pat_cir15_ycent1       .   unsigned, default = 540
//Bit 15:14,     reserved
//Bit 13: 0,     reg_pat_cir15_ycent2       .   unsigned, default = 900
#define P_VP_TRI_CTRL                              (volatile unsigned long *)0x800310c0
//Bit 31:16,     reg_pat_tri_slp            .   signed, default = 3639
//Bit 15: 0,     reg_pat_tri_keypt          .   signed, default = 0
#define P_VP_CSC0_OFF_INP01                        (volatile unsigned long *)0x80031100
//Bit 31:27,     reserved
//Bit 26:16,     reg_csc0_offst_inp0         .     signed, default = 0
//Bit 15:11,     reserved
//Bit 10: 0,     reg_csc0_offst_inp1         .     signed, default = 0
#define P_VP_CSC0_OFF_INP2                         (volatile unsigned long *)0x80031104
//Bit 31:11,     reserved
//Bit 10: 0,     reg_csc0_offst_inp2         .     signed, default = 0
#define P_VP_CSC0_MTRX_00_01                       (volatile unsigned long *)0x80031108
//Bit 31:26,     reserved
//Bit 25:16,     reg_csc0_matrix0_0          .     signed, default = 66
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc0_matrix0_1          .     signed, default = 129
#define P_VP_CSC0_MTRX_02_10                       (volatile unsigned long *)0x8003110c
//Bit 31:26,     reserved
//Bit 25:16,     reg_csc0_matrix0_2          .     signed, default = 15
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc0_matrix1_0          .     signed, default = -38
#define P_VP_CSC0_MTRX_11_12                       (volatile unsigned long *)0x80031110
//Bit 31:26,     reserved
//Bit 25:16,     reg_csc0_matrix1_1          .     signed, default = -74
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc0_matrix1_2          .     signed, default = 113
#define P_VP_CSC0_MTRX_20_21                       (volatile unsigned long *)0x80031114
//Bit 31:26,     reserved
//Bit 25:16,     reg_csc0_matrix2_0          .     signed, default = 112
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc0_matrix2_1          .     signed, default = -94
#define P_VP_CSC0_MTRX_22_OFF_OUP0                 (volatile unsigned long *)0x80031118
//Bit 31:27,     reserved
//Bit 26:16,     reg_csc0_offst_oup0         .     signed, default = 64
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc0_matrix2_2          .     signed, default = -18
#define P_VP_CSC0_OFF_OUP12                        (volatile unsigned long *)0x8003111c
//Bit 31:30,     reserved
//Bit 29:27,     reg_csc0_matrix_rs         0 s3: -2~3, 0 s3.8; 1: s2.9; 2: s1.10 3:s0.11.  signed, default = 0
//Bit 26:16,     reg_csc0_offst_oup1         .     signed, default = 512
//Bit 15:11,     reserved
//Bit 10: 0,     reg_csc0_offst_oup2         .     signed, default = 512
#define P_VP_CSC1_OFF_INP01                        (volatile unsigned long *)0x80031120
//Bit 31:27,     reserved
//Bit 26:16,     reg_csc1_offst_inp0         .     signed, default = -64
//Bit 15:11,     reserved
//Bit 10: 0,     reg_csc1_offst_inp1         .     signed, default = -512
#define P_VP_CSC1_OFF_INP2                         (volatile unsigned long *)0x80031124
//Bit 31:11,     reserved
//Bit 10: 0,     reg_csc1_offst_inp2         .     signed, default = -512
#define P_VP_CSC1_MTRX_00_01                       (volatile unsigned long *)0x80031128
//Bit 31:26,     reserved
//Bit 25:16,     reg_csc1_matrix0_0          .     signed, default = 149
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc1_matrix0_1          .     signed, default = 0
#define P_VP_CSC1_MTRX_02_10                       (volatile unsigned long *)0x8003112c
//Bit 31:26,     reserved
//Bit 25:16,     reg_csc1_matrix0_2          .     signed, default = 204
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc1_matrix1_0          .     signed, default = 149
#define P_VP_CSC1_MTRX_11_12                       (volatile unsigned long *)0x80031130
//Bit 31:26,     reserved
//Bit 25:16,     reg_csc1_matrix1_1          .     signed, default = -50
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc1_matrix1_2          .     signed, default = -104
#define P_VP_CSC1_MTRX_20_21                       (volatile unsigned long *)0x80031134
//Bit 31:26,     reserved
//Bit 25:16,     reg_csc1_matrix2_0          .     signed, default = 149
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc1_matrix2_1          .     signed, default = 258
#define P_VP_CSC1_MTRX_22_OFF_OUP0                 (volatile unsigned long *)0x80031138
//Bit 31:27,     reserved
//Bit 26:16,     reg_csc1_offst_oup0         .     signed, default = 0
//Bit 15:10,     reserved
//Bit  9: 0,     reg_csc1_matrix2_2          .     signed, default = 0
#define P_VP_CSC1_OFF_OUP12                        (volatile unsigned long *)0x8003113c
//Bit 31:30,     reserved
//Bit 29:27,     reg_csc1_matrix_rs         0 s3: -2~3, 0 s3.8; 1: s2.9; 2: s1.10 3:s0.11.  signed, default = -1
//Bit 26:16,     reg_csc1_offst_oup1         .     signed, default = 0
//Bit 15:11,     reserved
//Bit 10: 0,     reg_csc1_offst_oup2         .     signed, default = 0
#define P_VP_BST                                   (volatile unsigned long *)0x80031140
//Bit 31:27,     reserved
//Bit 26:16,     reg_adj_brightness          , too much?.    signed, default = 0
//Bit 15: 9,     reserved
//Bit  8: 0,     reg_adj_contrast            , [0,2), normalized 256 as '1', enough for [0,2)?.   unsigned, default = 256
#define P_VP_BLK_LEVEL                             (volatile unsigned long *)0x80031144
//Bit 31: 8,     reserved
//Bit  7: 0,     reg_adj_blacklevel          (black level to be subsctracted, 64 as default).   unsigned, default = 64
#define P_VP_WB_GAIN01                             (volatile unsigned long *)0x80031148
//Bit 31:27,     reserved
//Bit 26:16,     reg_wb_gain0                : gains to three components,1.10, [0,2).   unsigned, default = 1024
//Bit 15:11,     reserved
//Bit 10: 0,     reg_wb_gain1                : gains to three components,1.10, [0,2).   unsigned, default = 1024
#define P_VP_WB_GAIN2_PRE_OFF0                     (volatile unsigned long *)0x8003114c
//Bit 31:27,     reserved
//Bit 26:16,     reg_wb_gain2                : gains to three components,1.10, [0,2).   unsigned, default = 1024
//Bit 15:11,     reserved
//Bit 10: 0,     reg_wb_pre_offset0          : offset to the input components, [-1024,1023].  signed, default = 0
#define P_VP_WB_PRE_OFF12                          (volatile unsigned long *)0x80031150
//Bit 31:27,     reserved
//Bit 26:16,     reg_wb_pre_offset1          : offset to the input components, [-1024,1023].  signed, default = 0
//Bit 15:11,     reserved
//Bit 10: 0,     reg_wb_pre_offset2          : offset to the input components, [-1024,1023].  signed, default = 0
#define P_VP_WB_OFF01                              (volatile unsigned long *)0x80031154
//Bit 31:27,     reserved
//Bit 26:16,     reg_wb_offset0              : offset to the output components, [-1024,1023].  signed, default = 0
//Bit 15:11,     reserved
//Bit 10: 0,     reg_wb_offset1              : offset to the output components, [-1024,1023].  signed, default = 0
#define P_VP_WB_OFF2                               (volatile unsigned long *)0x80031158
//Bit 31:11,     reserved
//Bit 10: 0,     reg_wb_offset2              : offset to the output components, [-1024,1023].     signed, default = 0
#define P_VP_RGB_CTRST                             (volatile unsigned long *)0x8003115c
//Bit 31:28,     reserved
//Bit 27:16,     reg_rgb_ctrst               : contrast in rgb..   unsigned, default = 1024
//Bit 15:12,     reserved
//Bit 11: 2,     reg_rgb_ctrst_blklvl        : contrast blacklevel to be substract before and addback after gain operation. unsigned, default = 64
//Bit  1,        reserved
//Bit  0,        reg_rgb_ctrst_prt           : enable signal to protect saturation in rgb during contrast adjustment. unsigned, default = 1
#define P_VP_RGB_BRGHT                             (volatile unsigned long *)0x80031160
//Bit 31:14,     reserved
//Bit 13: 2,     reg_rgb_brght               : brightness level in rgb domain.  signed, default = 0
//Bit  1,        reg_rgb_brght_prt           : enalbe signal to protect saturation in rgb during brightness adjustment. unsigned, default = 1
//Bit  0,        reg_rgb_ctrst_dlut_x2       : enable to do x2 to the dlut cells before subtracting from normalized gain_max. unsigned, default = 0
#define P_VP_RGB_DLUT_0_3                          (volatile unsigned long *)0x80031164
//Bit 31:24,     reg_rgb_ctrst_dlut0         .   unsigned, default = 255
//Bit 23:16,     reg_rgb_ctrst_dlut1         .   unsigned, default = 205
//Bit 15: 8,     reg_rgb_ctrst_dlut2         .   unsigned, default = 171
//Bit  7: 0,     reg_rgb_ctrst_dlut3         .   unsigned, default = 147
#define P_VP_RGB_DLUT_4_7                          (volatile unsigned long *)0x80031168
//Bit 31:24,     reg_rgb_ctrst_dlut4         .   unsigned, default = 128
//Bit 23:16,     reg_rgb_ctrst_dlut5         .   unsigned, default = 113
//Bit 15: 8,     reg_rgb_ctrst_dlut6         .   unsigned, default = 102
//Bit  7: 0,     reg_rgb_ctrst_dlut7         .   unsigned, default = 93
#define P_VP_RGB_DLUT_8_11                         (volatile unsigned long *)0x8003116c
//Bit 31:24,     reg_rgb_ctrst_dlut8         .   unsigned, default = 85
//Bit 23:16,     reg_rgb_ctrst_dlut9         .   unsigned, default = 78
//Bit 15: 8,     reg_rgb_ctrst_dlut10        .   unsigned, default = 73
//Bit  7: 0,     reg_rgb_ctrst_dlut11        .   unsigned, default = 68
//LUT/RAM port
#define P_VP_LUT_ADDR_PORT                         (volatile unsigned long *)0x80031178
#define P_VP_LUT_DATA_PORT                         (volatile unsigned long *)0x8003117c
#define P_VP_DEMURA_CTRL                           (volatile unsigned long *)0x80031180
//Bit 31:29, reserved
//Bit 28:16, reg_dm_leak_light               .   unsigned, default=0
//Bit 15:14, reserved
//Bit 13:4,  reg_dm_threshold                .   unsigned, default=0
//Bit  3:1,  reg_dm_res_sel                  .   unsigned, default=0
//Bit    0,  reg_dm_bwidth_sel               .   unsigned, default=0
#define P_VP_DEMURA_DEBUG                          (volatile unsigned long *)0x80031184
//Bit 31:20, reserved
//Bit 19:16, reg_dm_lutwr_mode.              .   unsigned, default=0
//Bit 15:8,  reserved
//Bit  7:0,  reg_dm_debug_sel                .   unsigned, default=0
#define P_VP_TM_RCVY_VSYNC                         (volatile unsigned long *)0x800311a8
//Bit 31:30, reserved
//Bit 29:16, reg_tm_rcvy_vs_vstart           .   unsigned, default=0
//Bit 15:14, reserved
//Bit  13:0,  reg_tm_rcvy_vs_vend            .   unsigned, default=0
#define P_VP_TM_RCVY_HSYNC                         (volatile unsigned long *)0x800311ac
//Bit 31:30, reserved
//Bit 29:16, reg_tm_rcvy_hs_hstart           .   unsigned, default=0
//Bit 15:14, reserved
//Bit 13:0,  reg_tm_rcvy_hs_hend             .   unsigned, default=0
#define P_VP_TM_RCVY_CTRL                          (volatile unsigned long *)0x800311b0
//Bit   31,  reg_tm_rcvy_en		     .   unsigned, default=0
//Bit   30,  reg_tm_rcvy_go_fld_dly_en	     .   unsigned, default=0
//Bit 29:16, reg_tm_rcvy_go_fld_hstart       .   unsigned, default=0
//Bit   15,  reg_tm_rcvy_force_go_fld_val    .   unsigned, default=0
//Bit   14,  reg_tm_rcvy_force_go_fld        .   unsigned, default=0
//Bit 13:0,  reg_tm_rcvy_go_fld_vstart	     .   unsigned, default=0
//CM2 port
#define P_VP_CM2_ADDR_PORT                         (volatile unsigned long *)0x80031370
#define P_VP_CM2_DATA_PORT                         (volatile unsigned long *)0x80031374
//
// Reading file:  chroma_reg.h
//
//**********************************************************************************
//* Copyright (c) 2008, AMLOGIC Inc.
//* All rights reserved
//**********************************************************************************
//* File :  chroma_reg.v
//* Author : Terrence Wang
//* Date : Dec 2008
//* Description :
//*
//**********************************************************************************
//* Modification History:
//* Date    Modified By         Reason
//**********************************************************************************
// synopsys translate_off
// synopsys translate_on
#define P_VPP_CHROMA_ADDR_PORT                     (volatile unsigned long *)0x800311c0
#define P_VPP_CHROMA_DATA_PORT                     (volatile unsigned long *)0x800311c4
//`define CHROMA_ADDR_PORT        8'h67
//`define CHROMA_DATA_PORT        8'h68

//  CHROMA_GAIN_REG_XX(00-07)
//  hue gain, sat gain function control
//  Bit 31      reg_sat_en                  enable sat adjustment in current region
//  Bit 27      reg_sat_increase            sat adjustment increase or decrease
//                                          1'b1: increase  1'b0: decrease
//  Bit 26:25   reg_sat_central_en          sat adjustment with central biggest or one side biggest
//                                          2'b01 central biggest   2'b00 one side biggest
//  Bit 24      reg_sat_shape               when sat adjustment one side biggest, define left or right
//                                          1'b1: left side biggest 1'b0 right side biggest
//  Bit 23:16   reg_sat_gain                define the sat gain when sat adjustment
//                                          0x00-0xff
//  Bit 15      reg_hue_en                  enable hue adjustment in current region
//  Bit 11      reg_hue_clockwise           hue adjustment clockwise or anti-clockwise
//                                          1'b1: clockwise 1'b0: anti-clockwise
//  Bit 10:9    reg_hue_central_en          when hue adjustment, parabola curve or non-symmetry curve
//                                          1'b1: parabola curve    1'b0: non-symmetry curve
//  Bit 8       reg_hue_shape               when non-symmetry curve, define which side change more
//                                          1'b1: right side change more    1'b0: left side change more
//  Bit 7:0     reg_hue_gain                define the hue gain when hue adjustment
//                                          0x00-0x80, note: should be no bigger than 0x80

    #define CHROMA_GAIN_REG00       0x00


//  HUE_HUE_RANGE_REG_XX(00-07)
//  hue range select
//  Bit 31:24   no use now
//  Bit 23:16   reg_hue_shift_range         define the angle of target region
//                                          0x00-0xff,(0x100 means 120 degree though it can not be set)
//                                          must be greater or equal than 8'd8
//  Bit 15      reg_symmetry_en             this is used for create one symmetry region
//                                          the symmetry region hue_shift_start = reg_hue_hue_shift_start + reg_hue_shift_range<<5
//                                          the symmetry region hue_shift_range = reg_hue_shift_range
//                                          in symmetry region, all the sat and hue setting will be same with original region,
//                                          except reg_hue_shape, reg_sat_shape, reg_hue_clockwise will be reversed
//  Bit 14:0    reg_hue_hue_shift_start     define the start angle of target region
//                                          0x6000 means 360 degree
//                                          only region 0 and 1 can exceed 360 degrees.

    #define HUE_HUE_RANGE_REG00     0x01


//  HUE_RANGE_INV_REG_XX
//  Calculation should be follow
//  HUE_RANGE_INV_REG0X[15:0] = ((1<<20)/HUE_HUE_RANGE_REG0X[23:16]+1)>>1
//  HUE_RANGE_INV_REG_XX is to used to save divider

    #define HUE_RANGE_INV_REG00     0x02



//  for belowing each low, high, low_slope, high_slope group:
//            a_____________b
//            /             \               a = low  + 2^low_slope
//           /               \              b = high - 2^high_slope
//          /                 \             low_slope <= 7; high_slope <= 7
//         /                   \            b >= a
//  ______/_____________________\________
//       low                    high
//
//
//  HUE_LUM_RANGE_REG_XX(00-07)
//  luma range selection for hue adjustment
//  Bit 31:24   reg_sat_lum_low             define the low level of luma value for sat adjustment
//                                          0x00-0xff
//  Bit 23:20   reg_hue_lum_high_slope      define the slope area below high level of luma value for hue adjustment
//                                          0x00-0x07
//  Bit 19:16   reg_hue_lum_low_slope       define the slope area above low  level of luma value for hue adjustment
//                                          0x00-0x07
//  Bit 15:8    reg_hue_lum_high            define the high level of luma value for hue adjustment
//                                          0x00-0xff
//  Bit 7:0     reg_hue_lum_low             define the low  level of luma value for hue adjustment
//                                          0x00-0xff

    #define HUE_LUM_RANGE_REG00     0x03

//  HUE_SAT_RANGE_REG_XX(00-07)
//  sat range selection for hue adjustment
//  Bit 31:24   reg_sat_lum_high            define the high level of luma value for sat adjustment
//                                          0x00-0xff
//  Bit 23:20   reg_hue_sat_high_slope      define the slope area below high level of sat value for hue adjustment
//                                          0x00-0x07
//  Bit 19:16   reg_hue_sat_low_slope       define the slope area above low  level of sat value for hue adjustment
//                                          0x00-0x07
//  Bit 15:8    reg_hue_sat_high            define the high level of sat value for hue adjustment
//                                          0x00-0xff
//  Bit 7:0     reg_hue_sat_low             define the low  level of sat value for hue adjustment
//                                          0x00-0xff

    #define HUE_SAT_RANGE_REG00     0x04

//  SAT_SAT_RANGE_REG_XX(00-07)
//  sat range selection for hue adjustment
//  Bit 31:28   reg_sat_lum_high_slope      define the slope area below high level of luma value for sat adjustment
//                                          0x00-0x07
//  Bit 27:24   reg_sat_lum_low_slope       define the slope area above low  level of luma value for sat adjustment
//                                          0x00-0x07
//  Bit 23:20   reg_sat_sat_high_slope      define the slope area below high level of sat value for sat adjustment
//                                          0x00-0x07
//  Bit 19:16   reg_sat_sat_low_slope       define the slope area above low  level of sat value for sat adjustment
//                                          0x00-0x07
//  Bit 15:8    reg_sat_sat_high            define the high level of sat value for sat adjustment
//                                          0x00-0xff
//  Bit 7:0     reg_sat_sat_low             define the low  level of sat value for sat adjustment
//                                          0x00-0xff

    #define SAT_SAT_RANGE_REG00     0x05


    #define CHROMA_GAIN_REG01       0x06
    #define HUE_HUE_RANGE_REG01     0x07
    #define HUE_RANGE_INV_REG01     0x08
    #define HUE_LUM_RANGE_REG01     0x09
    #define HUE_SAT_RANGE_REG01     0x0a
    #define SAT_SAT_RANGE_REG01     0x0b

    #define CHROMA_GAIN_REG02       0x0c
    #define HUE_HUE_RANGE_REG02     0x0d
    #define HUE_RANGE_INV_REG02     0x0e
    #define HUE_LUM_RANGE_REG02     0x0f
    #define HUE_SAT_RANGE_REG02     0x10
    #define SAT_SAT_RANGE_REG02     0x11


    #define CHROMA_GAIN_REG03       0x12
    #define HUE_HUE_RANGE_REG03     0x13
    #define HUE_RANGE_INV_REG03     0x14
    #define HUE_LUM_RANGE_REG03     0x15
    #define HUE_SAT_RANGE_REG03     0x16
    #define SAT_SAT_RANGE_REG03     0x17

    #define CHROMA_GAIN_REG04       0x18
    #define HUE_HUE_RANGE_REG04     0x19
    #define HUE_RANGE_INV_REG04     0x1a
    #define HUE_LUM_RANGE_REG04     0x1b
    #define HUE_SAT_RANGE_REG04     0x1c
    #define SAT_SAT_RANGE_REG04     0x1d

    #define CHROMA_GAIN_REG05       0x1e
    #define HUE_HUE_RANGE_REG05     0x1f
    #define HUE_RANGE_INV_REG05     0x20
    #define HUE_LUM_RANGE_REG05     0x21
    #define HUE_SAT_RANGE_REG05     0x22
    #define SAT_SAT_RANGE_REG05     0x23

    #define CHROMA_GAIN_REG06       0x24
    #define HUE_HUE_RANGE_REG06     0x25
    #define HUE_RANGE_INV_REG06     0x26
    #define HUE_LUM_RANGE_REG06     0x27
    #define HUE_SAT_RANGE_REG06     0x28
    #define SAT_SAT_RANGE_REG06     0x29

    #define CHROMA_GAIN_REG07       0x2a
    #define HUE_HUE_RANGE_REG07     0x2b
    #define HUE_RANGE_INV_REG07     0x2c
    #define HUE_LUM_RANGE_REG07     0x2d
    #define HUE_SAT_RANGE_REG07     0x2e
    #define SAT_SAT_RANGE_REG07     0x2f

//  REG_CHROMA_CONTROL
//  Bit 31      reg_chroma_en               enable color manage function
//                                          1'b1: enable    1'b0: bypass
//  Bit 6       sat_sel                     uv_max or u^2+v^2 selected as sat for reference
//                                          1'b1: uv_max(default)   1'b0: u^2+v^2
//  Bit 5       uv_adj_en                   final uv_adjust enable
//                                          1'b1: enable    1'b0: bypass
//  Bit 2       hue_en                      rgb to hue enable
//                                          1'b1: enable(default)   1'b0: bypass
//  Bit 1:0     csc_sel                     define input YUV with different color type
//                                          2'b00: 601(16-235)  2'b01: 709(16-235)
//                                          2'b10: 601(0-255)   2'b11: 709(0-255)
    #define REG_CHROMA_CONTROL      0x30   // default 32h'80000024
    #define REG_DEMO_CENTER_BAR     0x31   // default 32h'0
    #define REG_DEMO_HLIGHT_MODE    0x32   // default 32h'0
    #define REG_DEMO_OWR_DATA       0x33   // default 32h'0


////===========================================////
//// CM2 ADDR
////===========================================////

    #define SAT_BYYB_NODE_REG0          0x200   // default 32'h0
    #define SAT_BYYB_NODE_REG1          0x201   // default 32'h0
    #define SAT_BYYB_NODE_REG2          0x202   // default 32'h0
    #define SAT_SRC_NODE_REG            0x203   // default 32'h0
    #define CM_ENH_SFT_MODE_REG         0x204   // default 32'h0
    #define FRM_SIZE_REG                0x205   // default 32'h0
    #define FITLER_CFG_REG              0x206   // default 32'h0
    #define CM_GLOBAL_GAIN_REG          0x207   // default 32'h0
    #define CM_ENH_CTL_REG              0x208   // default 32'h0

    #define ROI_X_SCOPE_REG             0x209   // default 32'h0
    #define ROI_Y_SCOPE_REG             0x20a   // default 32'h0
    #define POI_XY_DIR_REG              0x20b   // default 32'h0
    #define COI_Y_SCOPE_REG             0x20c   // default 32'h0
    #define COI_H_SCOPE_REG             0x20d   // default 32'h0
    #define COI_S_SCOPE_REG             0x20e   // default 32'h0
    #define IFO_MODE_REG                0x20f   // default 32'h0
    #define POI_RPL_MODE_REG            0x210   // default 32'h0
    #define DEMO_OWR_YHS_REG            0x211   // default 32'h0
    #define DEMO_POI_Y_REG              0x212   // default 32'h0
    #define DEMO_POI_H_REG              0x213   // default 32'h0
    #define DEMO_POI_S_REG              0x214   // default 32'h0
    //#define LUMA_BYH_LIMT_REG           0x215   // default 32'h0
    #define LUMA_ADJ_LIMT_REG           0x215   // default 32'h0
    #define SAT_ADJ_LIMT_REG            0x216   // default 32'h0
    #define HUE_ADJ_LIMT_REG            0x217   // default 32'h0
    #define UVHS_OFST_REG               0x218   // default 32'h0
    #define HUE_CFG_PARA_REG            0x219   // default 32'h0
    #define DEMO_SPLT_CFG_REG           0x21a   // default 32'h0
    #define DEMO_SPLT_YHS_REG           0x21b   // default 32'h0

////========= NODE 0 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H00      0x100   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H00      0x101   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H00      0x102   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H00      0x103   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H00      0x104   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 1 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H01      0x108   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H01      0x109   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H01      0x10a   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H01      0x10b   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H01      0x10c   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 2 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H02      0x110   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H02      0x111   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H02      0x112   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H02      0x113   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H02      0x114   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 3 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H03      0x118   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H03      0x119   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H03      0x11a   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H03      0x11b   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H03      0x11c   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 4 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H04      0x120   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H04      0x121   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H04      0x122   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H04      0x123   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H04      0x124   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 5 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H05      0x128   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H05      0x129   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H05      0x12a   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H05      0x12b   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H05      0x12c   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 6 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H06      0x130   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H06      0x131   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H06      0x132   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H06      0x133   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H06      0x134   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 7 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H07      0x138   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H07      0x139   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H07      0x13a   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H07      0x13b   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H07      0x13c   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 8 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H08      0x140   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H08      0x141   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H08      0x142   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H08      0x143   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H08      0x144   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 9 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H09      0x148   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H09      0x149   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H09      0x14a   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H09      0x14b   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H09      0x14c   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 10 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H10      0x150   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H10      0x151   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H10      0x152   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H10      0x153   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H10      0x154   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 11 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H11      0x158   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H11      0x159   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H11      0x15a   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H11      0x15b   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H11      0x15c   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 12 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H12      0x160   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H12      0x161   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H12      0x162   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H12      0x163   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H12      0x164   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx

////========= NODE 13 COEFFICIENT ==============////

    #define REG_CM2_ENH_COEFF0_H13      0x168   // default 32'H0
                                                  // [ 7: 0] : luma_byh_hx   / [15: 8] : sat_byhs_s0hx
                                                  // [23:16] : sat_byhs_s0hx / [31:24] : sat_byhs_s2hx
    #define REG_CM2_ENH_COEFF1_H13      0x169   // default 32'H0
                                                  // [ 7: 0] : hue_byh_hx   / [15: 8] : hue_byy_y0hx
                                                  // [23:16] : hue_byy_y1hx / [31:24] : hue_byy_y2hx
    #define REG_CM2_ENH_COEFF2_H13      0x16a   // default 32'H0
                                                  // [ 7: 0] : hue_byy_y3hx / [15: 8] : hue_byy_y4hx
                                                  // [23:16] : hue_bys_s0hx / [31:24] : hue_bys_s1hx
    #define REG_CM2_ENH_COEFF3_H13      0x16b   // default 32'H0
                                                  // [ 7: 0] : hue_bys_s2hx / [15: 8] : hue_bys_s3hx
                                                  // [23:16] : hue_bys_s4hx / [31:24] : hue_byya_y0hx
    #define REG_CM2_ENH_COEFF4_H13      0x16c   // default 32'H0
                                                  // [ 7: 0] : hue_byya_y1hx / [15: 8] : hue_byya_y2hx
                                                  // [23:16] : hue_byya_y3hx / [31:24] : hue_byya_y4hx


/* Constraints
0)
  there are 16 regions totally. 8 regions are for hue adjustment, 8 regions are for sat adjustment.
  the hue range of the 16 regions can be set to overlap, but if overlap, the hue range(start and end) must be same.
  the 8 regions for hue adjustment should not overlap. if corresponding reg_hue_en_00 - 07 == 1
  the 8 regions for hue adjustment are defined by: (example are for region 0)
    a) hue:
        start: reg_hue_hue_shift_start_00[14:0]
        end:
        if reg_symmetry_en_00 == 0
        reg_hue_hue_shift_start_00[14:0] + (reg_hue_hue_shift_range_00[7:0]<<5)
        if reg_symmetry_en_00 == 1
        reg_hue_hue_shift_start_00[14:0] + (reg_hue_hue_shift_range_00[7:0]<<6)
    b) sat:
        start: reg_hue_sat_low_00
        end:   reg_hue_sat_high_00

  the 8 regions for sat adjustment should not overlap. if corresponding reg_sat_en_00 - 07 == 1
  the 8 regions for sat adjustment are defined by: (example are for region 0)
    a) hue: same as that for hue adjustment.
        start: reg_hue_hue_shift_start_00[14:0]
        end:
        if reg_symmetry_en_00 == 0
        reg_hue_hue_shift_start_00[14:0] + (reg_hue_hue_shift_range_00[7:0]<<5)
        if reg_symmetry_en_00 == 1
        reg_hue_hue_shift_start_00[14:0] + (reg_hue_hue_shift_range_00[7:0]<<6)
    b) sat:
        start: reg_sat_sat_low_00
        end:   reg_sat_sat_high_00

1)
  reg_hue_hue_shift_range_00[7:0]:
  reg_hue_hue_shift_range_01[7:0]:
  reg_hue_hue_shift_range_02[7:0]:
  reg_hue_hue_shift_range_03[7:0]:
  reg_hue_hue_shift_range_04[7:0]:
  reg_hue_hue_shift_range_05[7:0]:
  reg_hue_hue_shift_range_06[7:0]:
  reg_hue_hue_shift_range_07[7:0]:
  must be greater or equal than 8'd8, so as reg_hue_range_inv_regxx can be represented by 0.0000_0000_xxxx_xxxx_xxxx_xxxx

2)
  all regions of 0-7 should meet below requirement. below is just an example for region 7.
  (reg_hue_lum_high_07 - reg_hue_lum_low_07) >=
        (1<<reg_hue_lum_low_slope_07) + (1<<reg_hue_lum_high_slope_07)

  (reg_hue_sat_high_07 - reg_hue_sat_low_07) >=
        (1<<reg_hue_sat_low_slope_07) + (1<<reg_hue_sat_high_slope_07)

  (reg_sat_lum_high_07 - reg_sat_lum_low_07) >=
        (1<<reg_sat_lum_low_slope_07) + (1<<reg_sat_lum_high_slope_07)

  (reg_sat_sat_high_07 - reg_sat_sat_low_07) >=
        (1<<reg_sat_sat_low_slope_07) + (1<<reg_sat_sat_high_slope_07)

3)
  all of reg_hue_hue_shift_start_00[14:0] ~ 07[14:0] < 0x6000.
  only region 0 and 1 can exceed 360 degrees. ie:
    reg_hue_hue_shift_start_00 + (reg_hue_hue_shift_range_00<<5) can greater than 0x6000.
    reg_hue_hue_shift_start_01 + (reg_hue_hue_shift_range_01<<5) can greater than 0x6000.
  but below should be met:
    reg_hue_hue_shift_start_00 + (reg_hue_hue_shift_range_00<<5) < 0x8000. if reg_symmetry_en_00 == 0
    reg_hue_hue_shift_start_01 + (reg_hue_hue_shift_range_00<<5) < 0x8000. if reg_symmetry_en_00 == 0
    reg_hue_hue_shift_start_00 + (reg_hue_hue_shift_range_00<<6) < 0x8000. if reg_symmetry_en_00 == 1
    reg_hue_hue_shift_start_01 + (reg_hue_hue_shift_range_00<<6) < 0x8000. if reg_symmetry_en_00 == 1

  others could not exceed 360 degrees. ie:
    reg_hue_hue_shift_start_02(to 7) + (reg_hue_hue_shift_range_02 (to 7) <<5) < 0x6000. if reg_symmetry_en_02 (to 7) == 0.
    reg_hue_hue_shift_start_02(to 7) + (reg_hue_hue_shift_range_02 (to 7) <<6) < 0x6000. if reg_symmetry_en_02 (to 7) == 1.

4)
  reg_hue_gain_00[7:0] <= 0x80.
  reg_hue_gain_01[7:0] <= 0x80.
  reg_hue_gain_02[7:0] <= 0x80.
  reg_hue_gain_03[7:0] <= 0x80.
  reg_hue_gain_04[7:0] <= 0x80.
  reg_hue_gain_05[7:0] <= 0x80.
  reg_hue_gain_06[7:0] <= 0x80.
  reg_hue_gain_07[7:0] <= 0x80.

5)
  below registers can only have two setting: 00 and 01.
    reg_hue_central_en_00[1:0]  .. _07[1:0]
    reg_sat_central_en_00[1:0]  .. _07[1:0]

6)
  all reg_..._slope_00-07 should not be greater than 7, ie: maximum value is 7.
   for example: below is for region 0:
   reg_hue_lum_low_slope_00[3:0]  <= 7
   reg_hue_lum_high_slope_00[3:0] <= 7
   reg_hue_sat_low_slope_00[3:0]  <= 7
   reg_hue_sat_high_slope_00[3:0] <= 7
   reg_sat_lum_low_slope_00[3:0]  <= 7
   reg_sat_lum_high_slope_00[3:0] <= 7
   reg_sat_sat_low_slope_00[3:0]  <= 7
   reg_sat_sat_high_slope_00[3:0] <= 7
*/

// synopsys translate_off
// synopsys translate_on
//
// Closing file:  chroma_reg.h
//
//PWM port
#define P_VP_PWM_ADDR_PORT                         (volatile unsigned long *)0x80031378
#define P_VP_PWM_DATA_PORT                         (volatile unsigned long *)0x8003137c
//
// Reading file:  vpu_pwm_reg.h
//
// synopsys translate_off
// synopsys translate_on

//Bit 31    reg_vpu_pwm_inv, 1: invert the pwm signal, active low
//Bit 30:29 reg_vpu_pwm_src_sel, 00: encl, enct, encp
//Bit 28:16 reg_vpu_pwm_v_end0
//Bit 12:0  reg_vpu_pwm_v_start0
#define     VPU_PWM0_V0  0x0

//Bit 28:16 reg_vpu_pwm_v_end1
//Bit 12:0  reg_vpu_pwm_v_start1
#define     VPU_PWM0_V1  0x1

//Bit 28:16 reg_vpu_pwm_v_end2
//Bit 12:0  reg_vpu_pwm_v_start2
#define     VPU_PWM0_V2  0x2

//Bit 28:16 reg_vpu_pwm_v_end3
//Bit 12:0  reg_vpu_pwm_v_start3
#define     VPU_PWM0_V3  0x3

//Bit 28:16 reg_vpu_pwm_h_end0
//Bit 12:0  reg_vpu_pwm_h_start0
#define     VPU_PWM0_H0  0x4

//Bit 28:16 reg_vpu_pwm_h_end1
//Bit 12:0  reg_vpu_pwm_h_start1
#define     VPU_PWM0_H1  0x5

//Bit 28:16 reg_vpu_pwm_h_end2
//Bit 12:0  reg_vpu_pwm_h_start2
#define     VPU_PWM0_H2  0x6

//Bit 28:16 reg_vpu_pwm_h_end3
//Bit 12:0  reg_vpu_pwm_h_start3
#define     VPU_PWM0_H3  0x7

//Bit 31    reg_vpu_pwm_inv, 1: invert the pwm signal, active low
//Bit 30:29 reg_vpu_pwm_src_sel, 00: encl, enct, encp
//Bit 28:16 reg_vpu_pwm_v_end0
//Bit 12:0  reg_vpu_pwm_v_start0
#define     VPU_PWM1_V0  0x8

//Bit 28:16 reg_vpu_pwm_v_end1
//Bit 12:0  reg_vpu_pwm_v_start1
#define     VPU_PWM1_V1  0x9

//Bit 28:16 reg_vpu_pwm_v_end2
//Bit 12:0  reg_vpu_pwm_v_start2
#define     VPU_PWM1_V2  0xa

//Bit 28:16 reg_vpu_pwm_v_end3
//Bit 12:0  reg_vpu_pwm_v_start3
#define     VPU_PWM1_V3  0xb

//Bit 28:16 reg_vpu_pwm_h_end0
//Bit 12:0  reg_vpu_pwm_h_start0
#define     VPU_PWM1_H0  0xc

//Bit 28:16 reg_vpu_pwm_h_end1
//Bit 12:0  reg_vpu_pwm_h_start1
#define     VPU_PWM1_H1  0xd

//Bit 28:16 reg_vpu_pwm_h_end2
//Bit 12:0  reg_vpu_pwm_h_start2
#define     VPU_PWM1_H2  0xe

//Bit 28:16 reg_vpu_pwm_h_end3
//Bit 12:0  reg_vpu_pwm_h_start3
#define     VPU_PWM1_H3  0xf

//Bit 31    reg_vpu_pwm_inv, 1: invert the pwm signal, active low
//Bit 30:29 reg_vpu_pwm_src_sel, 00: encl, enct, encp
//Bit 28:16 reg_vpu_pwm_v_end0
//Bit 12:0  reg_vpu_pwm_v_start0
#define     VPU_PWM2_V0  0x10

//Bit 28:16 reg_vpu_pwm_v_end1
//Bit 12:0  reg_vpu_pwm_v_start1
#define     VPU_PWM2_V1  0x11

//Bit 28:16 reg_vpu_pwm_v_end2
//Bit 12:0  reg_vpu_pwm_v_start2
#define     VPU_PWM2_V2  0x12

//Bit 28:16 reg_vpu_pwm_v_end3
//Bit 12:0  reg_vpu_pwm_v_start3
#define     VPU_PWM2_V3  0x13

//Bit 28:16 reg_vpu_pwm_h_end0
//Bit 12:0  reg_vpu_pwm_h_start0
#define     VPU_PWM2_H0  0x14

//Bit 28:16 reg_vpu_pwm_h_end1
//Bit 12:0  reg_vpu_pwm_h_start1
#define     VPU_PWM2_H1  0x15

//Bit 28:16 reg_vpu_pwm_h_end2
//Bit 12:0  reg_vpu_pwm_h_start2
#define     VPU_PWM2_H2  0x16

//Bit 28:16 reg_vpu_pwm_h_end3
//Bit 12:0  reg_vpu_pwm_h_start3
#define     VPU_PWM2_H3  0x17

#define     VPU_PWM_HVSIZE_M1  0x40
#define     VPU_3DSYNC_CTRL    0x41
#define  	VPU_3DSYNC_HVSTART 0x42
#define  	VPU_3DSYNC_HVEND   0x43
#define     VPU_3DGLS_CTRL     0x44
#define  	VPU_3DGLS_HVSTART  0x45
#define  	VPU_3DGLS_HVEND    0x46
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  vpu_pwm_reg.h
//
//8'he0~8'hff:  VX1_LVDS
//
// Reading file:  vx1_lvds_reg.h
//
// synopsys translate_off
// synopsys translate_on
// -----------------------------------------------
// CBUS_BASE:  VXLVS_CBUS_BASE = 0x04
// -----------------------------------------------
//8'h60~8'h7f
#define P_VXLVS_CTRL                               (volatile unsigned long *)0x80031380
//Bit 31: 1, reserved
//Bit     0, reg_vx1_lvds   default=0
#define P_VXLVS_BLANK_DATA                         (volatile unsigned long *)0x80031384
//Bit 31:30, reserved
//Bit 29: 0, reg_blank_data
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// VX1 Register
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#define P_VBO_SOFT_RST                             (volatile unsigned long *)0x80031394
//Bit 31: 9, reserved
//Bit  8: 0, reg_vbo_softrst   vbyone software reset
#define P_VBO_GCLK_CTRL                            (volatile unsigned long *)0x80031398
//Bit 31: 0, reg_vbo_gclk_ctrl  default=0
#define P_VBO_CTRL                                 (volatile unsigned long *)0x8003139c
//Bit 31: 0, reg_vbo_ctrl
#define P_VBO_VIN_CTRL                             (volatile unsigned long *)0x800313a0
//Bit 31:16, reg_vbo_act_vsize
//Bit 15: 0, reg_vbo_vin_ctrl
#define P_VBO_LANES                                (volatile unsigned long *)0x800313a4
//Bit 31:16, reserved
//Bit 15: 0, reg_vbo_lanes
#define P_VBO_REGION01                             (volatile unsigned long *)0x800313a8
//Bit 31: 0, reg_vbo_region01
#define P_VBO_REGION23                             (volatile unsigned long *)0x800313ac
//Bit 31: 0, reg_vbo_region23
#define P_VBO_VBK_CTL                              (volatile unsigned long *)0x800313b0
//Bit 31: 0, reg_vbo_vblank_ctl
#define P_VBO_HBK_PXL_CTL                          (volatile unsigned long *)0x800313b4
//Bit 31:24, reserved
//Bit 23:16, reg_vbo_pixel_ctl
//Bit 15: 0, reg_vbo_hblank_ctl
#define P_VBO_LANE_SKEW                            (volatile unsigned long *)0x800313b8
//Bit 31: 0, reg_vbo_lane_skew
#define P_VBO_LANE_SWAP                            (volatile unsigned long *)0x800313bc
//Bit 31:24, reserved
//Bit 23:16, reg_vbo_lane_rev10
//Bit 15:11, reserved
//Bit 10: 0, reg_vbo_lane_swap
#define P_LVDS_CTRL                                (volatile unsigned long *)0x800313c0
//Bit 31:14, reserved
//Bit 13: 8, reg_lvds_gclk_ctrl default=0
//Bit  7: 1, reserved
//Bit     0, reg_lvds_enable    default=0
#define P_LVDS_PACK_CNTL                           (volatile unsigned long *)0x800313c4
//Bit 31: 0, reg_lvds_pack_cntl
#define P_LVDS_CLK_VALUE                           (volatile unsigned long *)0x800313c8
//Bit 31: 0, reg_lvds_clk_val
#define P_LVDS_BIST_CTRL                           (volatile unsigned long *)0x800313cc
//Bit 31:13, reserved
//Bit 12: 8, reg_bist_tap_sel  default=0
//Bit  7: 1, reserved
//Bit     0, reg_bist_enable   default=0
#define P_LVDS_BIST_MUX_SEL0                       (volatile unsigned long *)0x800313d0
//Bit 31:24, reserved
//Bit 23: 0, reg_bist_mux_sel0
#define P_LVDS_BIST_MUX_SEL1                       (volatile unsigned long *)0x800313d4
//Bit 31:24, reserved
//Bit 23: 0, reg_bist_mux_sel1
#define P_LVDS_BIST_FIXED_VALUE                    (volatile unsigned long *)0x800313d8
//Bit 31: 0, reg_bist_fixed_val
#define P_VBO_RO_STATUS                            (volatile unsigned long *)0x800313dc
//Bit 31: 0, reg_vbo_status
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  vx1_lvds_reg.h
//
//9'h100~9'h14f: HIST_DNLP
//
// Reading file:  hist_dnlp_reg.h
//
// synopsys translate_off
// synopsys translate_on
// ----------------------------
// HIST_SPL 0x2f
// ----------------------------
// -----------------------------------------------
// CBUS_BASE:  HIST_SPL_CBUS_BASE = 0x05
// -----------------------------------------------
//Bit 15    dnlp_en     1'b1:  enable dynamic non-linear processing
//BIT 14: 34bin only, 0&255 and other 32bins
//Bit 13:11 hist_din_sel, 00: from vdin0 dout,  1: from vdin1, 2: from nr dout, 3: di output, 4: vpp output, 5: vd1_din, 6: vd2_din, 7:osd1_dout
//Bit 10:8   hist_din_comp_mux, mux of [29:22], [19:12], [9:2] for hist detect
//Bit 7:5   hist_dnlp_low   the real pixels in each bins got by DNLP_HISTXX should multiple with 2^(dnlp_low+3)
//Bit 3:2   hist_din_sel    the source used for hist statistics.  00: from matrix0 dout,  01: from vsc_dout, 10: from matrix1 dout, 11: form matrix1 din
//Bit 1     hist_win_en     1'b0: hist used for full picture; 1'b1: hist used for pixels within hist window
//Bit 0     hist_spl_en     1'b0: disable hist readback; 1'b1: enable hist readback
#define P_HIST_CTRL                                (volatile unsigned long *)0x80031400
//Bit 28:16 hist_hstart  horizontal start value to define hist window
//Bit 12:0  hist_hend    horizontal end value to define hist window
#define P_HIST_H_START_END                         (volatile unsigned long *)0x80031404
//Bit 28:16 hist_vstart  vertical start value to define hist window
//Bit 12:0  hist_vend    vertical end value to define hist window
#define P_HIST_V_START_END                         (volatile unsigned long *)0x80031408
//Bit 28:16 hist_pic_height  active input data window height
//Bit 12:0  hist_pic_width   active input data window width
#define P_HIST_PIC_SIZE                            (volatile unsigned long *)0x8003140c
//Bit 15:8 hist_pix_white_value: >= this value will be white pixel
//Bit 7:0 hist_pix_black_value: <= this value will be black pixel
#define P_HIST_BLACK_WHITE_VALUE                   (volatile unsigned long *)0x80031410
//Bit 15:8  hist_max    maximum value
//Bit 7:0   hist_min    minimum value
//read only
#define P_HIST_MAX_MIN                             (volatile unsigned long *)0x80031414
//Bit 31:0  hist_spl_rd
//counts for the total luma value
//read only
#define P_HIST_SPL_VAL                             (volatile unsigned long *)0x80031418
//Bit 21:0  hist_spl_pixel_count
//counts for the total calculated pixels
//read only
#define P_HIST_SPL_PIX_CNT                         (volatile unsigned long *)0x8003141c
//Bit 31:0  hist_chroma_sum
//counts for the total chroma value
//read only
#define P_HIST_CHROMA_SUM                          (volatile unsigned long *)0x80031420
//Bit 31:16 higher hist bin
//Bit 15:0  lower hist bin
//0-255 are splited to 64 bins evenly, and DNLP_HISTXX
//are the statistic number of pixels that within each bin.
//DNLP_HIST00[15:0]  counts for the first  bin
//DNLP_HIST00[31:16] counts for the second bin
//DNLP_HIST01[15:0]  counts for the third  bin
//DNLP_HIST01[31:16] counts for the fourth bin
//etc...
//read only
#define P_DNLP_HIST00                              (volatile unsigned long *)0x80031424
#define P_DNLP_HIST01                              (volatile unsigned long *)0x80031428
#define P_DNLP_HIST02                              (volatile unsigned long *)0x8003142c
#define P_DNLP_HIST03                              (volatile unsigned long *)0x80031430
#define P_DNLP_HIST04                              (volatile unsigned long *)0x80031434
#define P_DNLP_HIST05                              (volatile unsigned long *)0x80031438
#define P_DNLP_HIST06                              (volatile unsigned long *)0x8003143c
#define P_DNLP_HIST07                              (volatile unsigned long *)0x80031440
#define P_DNLP_HIST08                              (volatile unsigned long *)0x80031444
#define P_DNLP_HIST09                              (volatile unsigned long *)0x80031448
#define P_DNLP_HIST10                              (volatile unsigned long *)0x8003144c
#define P_DNLP_HIST11                              (volatile unsigned long *)0x80031450
#define P_DNLP_HIST12                              (volatile unsigned long *)0x80031454
#define P_DNLP_HIST13                              (volatile unsigned long *)0x80031458
#define P_DNLP_HIST14                              (volatile unsigned long *)0x8003145c
#define P_DNLP_HIST15                              (volatile unsigned long *)0x80031460
#define P_DNLP_HIST16                              (volatile unsigned long *)0x80031464
#define P_DNLP_HIST17                              (volatile unsigned long *)0x80031468
#define P_DNLP_HIST18                              (volatile unsigned long *)0x8003146c
#define P_DNLP_HIST19                              (volatile unsigned long *)0x80031470
#define P_DNLP_HIST20                              (volatile unsigned long *)0x80031474
#define P_DNLP_HIST21                              (volatile unsigned long *)0x80031478
#define P_DNLP_HIST22                              (volatile unsigned long *)0x8003147c
#define P_DNLP_HIST23                              (volatile unsigned long *)0x80031480
#define P_DNLP_HIST24                              (volatile unsigned long *)0x80031484
#define P_DNLP_HIST25                              (volatile unsigned long *)0x80031488
#define P_DNLP_HIST26                              (volatile unsigned long *)0x8003148c
#define P_DNLP_HIST27                              (volatile unsigned long *)0x80031490
#define P_DNLP_HIST28                              (volatile unsigned long *)0x80031494
#define P_DNLP_HIST29                              (volatile unsigned long *)0x80031498
#define P_DNLP_HIST30                              (volatile unsigned long *)0x8003149c
#define P_DNLP_HIST31                              (volatile unsigned long *)0x800314a0
#define P_DNLP_HIST32                              (volatile unsigned long *)0x800314a4
#define P_HIST_3DMODE                              (volatile unsigned long *)0x800314a8
//Bit 31:24     bottom of region03 output value
//Bit 23:16     bottom of region02 output value
//Bit 15:8      bottom of region01 output value
//Bit 7:0       bottom of region00 output value
#define P_DNLP_CTRL_00                             (volatile unsigned long *)0x800314b8
//Bit 31:24     bottom of region07 output value
//Bit 23:16     bottom of region06 output value
//Bit 15:8      bottom of region05 output value
//Bit 7:0       bottom of region04 output value
#define P_DNLP_CTRL_01                             (volatile unsigned long *)0x800314bc
//Bit 31:24     bottom of region11 output value
//Bit 23:16     bottom of region10 output value
//Bit 15:8      bottom of region09 output value
//Bit 7:0       bottom of region08 output value
#define P_DNLP_CTRL_02                             (volatile unsigned long *)0x800314c0
//Bit 31:24     bottom of region15 output value
//Bit 23:16     bottom of region14 output value
//Bit 15:8      bottom of region13 output value
//Bit 7:0       bottom of region12 output value
#define P_DNLP_CTRL_03                             (volatile unsigned long *)0x800314c4
//Bit 31:24     bottom of region19 output value
//Bit 23:16     bottom of region18 output value
//Bit 15:8      bottom of region17 output value
//Bit 7:0       bottom of region16 output value
#define P_DNLP_CTRL_04                             (volatile unsigned long *)0x800314c8
//Bit 31:24     bottom of region23 output value
//Bit 23:16     bottom of region22 output value
//Bit 15:8      bottom of region21 output value
//Bit 7:0       bottom of region20 output value
#define P_DNLP_CTRL_05                             (volatile unsigned long *)0x800314cc
//Bit 31:24     bottom of region27 output value
//Bit 23:16     bottom of region26 output value
//Bit 15:8      bottom of region25 output value
//Bit 7:0       bottom of region24 output value
#define P_DNLP_CTRL_06                             (volatile unsigned long *)0x800314d0
//Bit 31:24     bottom of region31 output value
//Bit 23:16     bottom of region30 output value
//Bit 15:8      bottom of region29 output value
//Bit 7:0       bottom of region28 output value
#define P_DNLP_CTRL_07                             (volatile unsigned long *)0x800314d4
//Bit 31:24     bottom of region35 output value
//Bit 23:16     bottom of region34 output value
//Bit 15:8      bottom of region33 output value
//Bit 7:0       bottom of region32 output value
#define P_DNLP_CTRL_08                             (volatile unsigned long *)0x800314d8
//Bit 31:24     bottom of region39 output value
//Bit 23:16     bottom of region38 output value
//Bit 15:8      bottom of region37 output value
//Bit 7:0       bottom of region36 output value
#define P_DNLP_CTRL_09                             (volatile unsigned long *)0x800314dc
//Bit 31:24     bottom of region43 output value
//Bit 23:16     bottom of region42 output value
//Bit 15:8      bottom of region41 output value
//Bit 7:0       bottom of region40 output value
#define P_DNLP_CTRL_10                             (volatile unsigned long *)0x800314e0
//Bit 31:24     bottom of region47 output value
//Bit 23:16     bottom of region46 output value
//Bit 15:8      bottom of region45 output value
//Bit 7:0       bottom of region44 output value
#define P_DNLP_CTRL_11                             (volatile unsigned long *)0x800314e4
//Bit 31:24     bottom of region51 output value
//Bit 23:16     bottom of region50 output value
//Bit 15:8      bottom of region49 output value
//Bit 7:0       bottom of region48 output value
#define P_DNLP_CTRL_12                             (volatile unsigned long *)0x800314e8
//Bit 31:24     bottom of region55 output value
//Bit 23:16     bottom of region54 output value
//Bit 15:8      bottom of region53 output value
//Bit 7:0       bottom of region52 output value
#define P_DNLP_CTRL_13                             (volatile unsigned long *)0x800314ec
//Bit 31:24     bottom of region59 output value
//Bit 23:16     bottom of region58 output value
//Bit 15:8      bottom of region57 output value
//Bit 7:0       bottom of region56 output value
#define P_DNLP_CTRL_14                             (volatile unsigned long *)0x800314f0
//Bit 31:24     bottom of region63 output value
//Bit 23:16     bottom of region62 output value
//Bit 15:8      bottom of region61 output value
//Bit 7:0       bottom of region60 output value
#define P_DNLP_CTRL_15                             (volatile unsigned long *)0x800314f4
#define P_HIST_DNLP_GCLK_CTRL                      (volatile unsigned long *)0x800314fc
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  hist_dnlp_reg.h
//
//9'h160~9'h19f:    SOSD
//
// Reading file:  sosd_reg.h
//
//===========================================================================
//
//	Copyright @ 2012 by Amlogic Inc.
//	All Rights Reserved.
//
//  File name    sosd_reg.h
//  Description
//  Designer       Guanzhong Zheng
//  Created On     02/15/2014
//
//  Assumptions	 sosd_reg
//  Limitations	 none
//
//===========================================================================
//
//===========================================================================
// synopsys translate_off
// synopsys translate_on
// -----------------------------------------------
// CBUS_BASE:  OSD_CBUS_BASE = 0x05
// -----------------------------------------------
#define P_OSD_COLOR_RGBA0                          (volatile unsigned long *)0x80031500
#define P_OSD_COLOR_RGBA1                          (volatile unsigned long *)0x80031504
#define P_OSD_COLOR_RGBA2                          (volatile unsigned long *)0x80031508
#define P_OSD_COLOR_RGBA3                          (volatile unsigned long *)0x8003150c
#define P_OSD_COLOR_RGBA4                          (volatile unsigned long *)0x80031510
#define P_OSD_COLOR_RGBA5                          (volatile unsigned long *)0x80031514
#define P_OSD_COLOR_RGBA6                          (volatile unsigned long *)0x80031518
#define P_OSD_COLOR_RGBA7                          (volatile unsigned long *)0x8003151c
#define P_OSD_COLOR_RGBA8                          (volatile unsigned long *)0x80031520
#define P_OSD_COLOR_RGBA9                          (volatile unsigned long *)0x80031524
#define P_OSD_COLOR_RGBA10                         (volatile unsigned long *)0x80031528
#define P_OSD_COLOR_RGBA11                         (volatile unsigned long *)0x8003152c
#define P_OSD_COLOR_RGBA12                         (volatile unsigned long *)0x80031530
#define P_OSD_COLOR_RGBA13                         (volatile unsigned long *)0x80031534
#define P_OSD_COLOR_RGBA14                         (volatile unsigned long *)0x80031538
#define P_OSD_COLOR_RGBA15                         (volatile unsigned long *)0x8003153c
#define P_OSD_FONT_HCT0                            (volatile unsigned long *)0x80031540
#define P_OSD_FONT_HCT1                            (volatile unsigned long *)0x80031544
#define P_OSD_FONT_HCT2                            (volatile unsigned long *)0x80031548
#define P_OSD_FONT_HCT3                            (volatile unsigned long *)0x8003154c
#define P_OSD_FONT_HCT4                            (volatile unsigned long *)0x80031550
#define P_OSD_FONT_HCT5                            (volatile unsigned long *)0x80031554
#define P_OSD_FONT_HCT6                            (volatile unsigned long *)0x80031558
#define P_OSD_FONT_HCT7                            (volatile unsigned long *)0x8003155c
#define P_OSD_FONT_HCT8                            (volatile unsigned long *)0x80031560
#define P_OSD_FONT_HCT9                            (volatile unsigned long *)0x80031564
#define P_OSD_FONT_HCT10                           (volatile unsigned long *)0x80031568
#define P_OSD_FONT_HCT11                           (volatile unsigned long *)0x8003156c
#define P_OSD_FONT_HCT12                           (volatile unsigned long *)0x80031570
#define P_OSD_FONT_HCT13                           (volatile unsigned long *)0x80031574
#define P_OSD_FONT_HCT14                           (volatile unsigned long *)0x80031578
#define P_OSD_FONT_HCT15                           (volatile unsigned long *)0x8003157c
#define P_OSD_FONT_HCT16                           (volatile unsigned long *)0x80031580
#define P_OSD_FONT_HCT17                           (volatile unsigned long *)0x80031584
#define P_OSD_FONT_HCT18                           (volatile unsigned long *)0x80031588
#define P_OSD_FONT_HCT19                           (volatile unsigned long *)0x8003158c
#define P_OSD_FONT_HCT20                           (volatile unsigned long *)0x80031590
#define P_OSD_FONT_HCT21                           (volatile unsigned long *)0x80031594
#define P_OSD_FONT_HCT22                           (volatile unsigned long *)0x80031598
#define P_OSD_FONT_HCT23                           (volatile unsigned long *)0x8003159c
#define P_OSD_FONT_HCT24                           (volatile unsigned long *)0x800315a0
#define P_OSD_FONT_HCT25                           (volatile unsigned long *)0x800315a4
#define P_OSD_FONT_HCT26                           (volatile unsigned long *)0x800315a8
#define P_OSD_FONT_HCT27                           (volatile unsigned long *)0x800315ac
#define P_OSD_FONT_HCT28                           (volatile unsigned long *)0x800315b0
#define P_OSD_FONT_HCT29                           (volatile unsigned long *)0x800315b4
#define P_OSD_FONT_HCT30                           (volatile unsigned long *)0x800315b8
#define P_OSD_FONT_HCT31                           (volatile unsigned long *)0x800315bc
#define P_OSD_TXT_REGION_X                         (volatile unsigned long *)0x800315c0
//[29:16] reg_osd_xend
//[13:0]  reg_osd_xstart
#define P_OSD_TXT_REGION_Y                         (volatile unsigned long *)0x800315c4
//[29:16] reg_osd_yend
//[13:0]  reg_osd_ystart
#define P_OSD_3D_CTRL                              (volatile unsigned long *)0x800315c8
//[31]    reg_osd_3d_xintlv
//[30]    reg_osd_3d_xintlv_phase
//[29:16] reg_osd_3d_xsplit
//[15]    reg_osd_3d_yintlv
//[14]    reg_osd_3d_yintlv_phase
//[13:0] reg_osd_3d_ysplit
#define P_OSD_FONT_REG0                            (volatile unsigned long *)0x800315cc
//[31:30] reg_osd_font_xscal
//[29:24] reg_osd_font_xsize
//[23:22] reg_osd_font_yscal
//[21:16] reg_osd_font_ysize
//[14]    reg_osd_font_xintm
//[13]    reg_osd_font_yintm
//[12]    reg_osd_font_bgfginvert
//[11:0]  reg_osd_font_size
#define P_OSD_FONT_PAD                             (volatile unsigned long *)0x800315d0
//[31:24] reg_osd_font_bound_xpad_left
//[23:16] reg_osd_font_bound_xpad_right
//[15:8]  reg_osd_font_bound_ypad_top
//[7:0]   reg_osd_font_bound_ypad_bot
#define P_OSD_CHAR_REG0                            (volatile unsigned long *)0x800315d4
//[23:16] reg_osd_code_return
//[8]     reg_osd_align_mode
//[3:0]   reg_osd_align_bcindex
#define P_OSD_RAM_REG0                             (volatile unsigned long *)0x800315d8
//[24]    ram_char_sel
//[23:16] ram_font_lib_max
//[11:0]  ram_char_num
#define P_OSD_PSIZE                                (volatile unsigned long *)0x800315dc
//[28:16] picture_ysize
//[12:0]  picture_xsize
//TODO temp add, need owner check
#define P_OSD_GCLK_CTRL                            (volatile unsigned long *)0x800315e0
//[9:0] reg_osd_gclk_ctrl
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  sosd_reg.h
//
//9'h180~9'h19f:    SRCIF
//
// Reading file:  vpu_srcif_regs.h
//
// synopsys translate_off
// synopsys translate_on
// -----------------------------------------------
// CBUS_BASE:  VPU_SRCIF_CBUS_BASE = 0x05
// -----------------------------------------------
#define P_VPU_SRCIF_CTRL                           (volatile unsigned long *)0x80031600
//Bit 31:27,        reserved
//Bit 26,           reg_srcif_dbg_sel
//Bit 25:16,        reg_tx_tim_meas_ofst        signed    , default = 0    : :
//Bit 15:14,        reg_tx_vsyn_sel             unsigned  , default = 0    : : tx vsyn output according the rx vsyn level or rx vsyn pulse
//Bit 13: 8,        reg_rx_drop_tim_ratio       unsigned  , default = 0x10 : :
//Bit  7: 5,        reg_in_level_inv            unsigned  , default = 0    : :
//Bit  4,           reg_rx_loop0_drop_en         unsigned  , default = 1    : :
//Bit  3,           reg_tx_loop0_fill_en         unsigned  , default = 1    : :
//Bit  2,           reg_in_level_sw_mask         unsigned  , default = 0    : :
//Bit  1,           reg_vsyn_out_en              unsigned  , default = 1    : :
//Bit  0,           reg_meas_cyc_mode            unsigned  , default = 1    : : keep cycle; 0 : keep time
#define P_VPU_SRCIF_RX_DROP_NUM                    (volatile unsigned long *)0x80031604
//Bit 31:16,        reg_rx_drop_num             unsigned  , default = 10   : :
//Bit 15: 0,        reg_rx_drop_line_len        unsigned  , default = 0    : :
#define P_VPU_SRCIF_LBUF_DEPTH                     (volatile unsigned long *)0x80031608
//Bit 31:16,        reg_vblank_hsize_lmt        unsigned  , default = 1920
//Bit 15:12,        reserved
//Bit 11: 0,        reg_lbuf_depth              unsigned  , default = 1024 : :
#define P_VPU_SRCIF_FLOW_THS                       (volatile unsigned long *)0x8003160c
//Bit 31,           reserved
//Bit 30:16,        reg_fifo_underflow_ths      unsigned  , default = 2    :
//Bit 15,           reserved
//Bit 14: 0,        reg_fifo_overflow_ths       unsigned  , default = 6142 :
#define P_VPU_SRCIF_LOOP_FIFO_LMT                  (volatile unsigned long *)0x80031610
//Bit 31,           reserved
//Bit 30:16,        reg_loop0_fifo_lowlmt       unsigned  , default = 1500 : target fifo level low limit to keep stable
//Bit 15,           reserved
//Bit 14: 0,        reg_loop0_fifo_higlmt       unsigned  , default = 6500 : target fifo level up limit to keep stable
#define P_VPU_SRCIF_LOOP_FIFO_TARGET               (volatile unsigned long *)0x80031614
//Bit 31,           reserved
//Bit 30:16,        reg_loop0_fifo_target       unsigned  , default = 4000 : target fifo level to keep stable
//Bit 15:14,        reserved
//Bit 13: 0,        reg_loop0_error_lmt         unsigned  , default = 2000 : error limit
#define P_VPU_SRCIF_LOOP_ERR_CORE                  (volatile unsigned long *)0x80031618
//Bit 31:29,        reserved
//Bit 28,           reg_loop0_error_core_mode     unsigned  , default = 1    : coring mode of the error, 0: soft coring; 1: hard coring
//Bit 27:16,        reg_loop0_error_core0       unsigned  , default = 700  : [neg_thd pos_thd] for coring the error
//Bit 15:12,        reserved
//Bit 11: 0,        reg_loop0_error_core1       unsigned  , default = 700  : [neg_thd pos_thd] for coring the error
#define P_VPU_SRCIF_LOOP_ERR_GAIN                  (volatile unsigned long *)0x8003161c
//Bit 31:24,        reserved
//Bit 23:16,        reg_loop0_error_gain_lmt    unsigned  , default = 255  : gain to (fifo_level-target)
//Bit 15: 8,        reg_loop0_error_gain_raw    unsigned  , default = 255  : gain to (fifo_level-target)
//Bit  7: 0,        reg_loop0_error_gain_fin    unsigned  , default = 32   : gain to (fifo_level-target)
#define P_VPU_SRCIF_LOOP_ADJ_PAD_LMT               (volatile unsigned long *)0x80031620
//Bit 31:28,        reserved
//Bit 27:16,        reg_loop0_adj_pad_lmt0      unsigned  , default = 1000 : [neg_lmt pos_lmt] for adj_pad negative and positive limit
//Bit 15:12,        reserved
//Bit 11: 0,        reg_loop0_adj_pad_lmt1      unsigned  , default = 1000 : [neg_lmt pos_lmt] for adj_pad negative and positive limit
#define P_VPU_SRCIF_LOOP_ADJ_PAD_CFG               (volatile unsigned long *)0x80031624
//Bit 31:19,        reserved
//Bit 18:16,        reg_loop0_adj_pad_rs           unsigned  , default = 4    : right shift bits of product of loop0 accum and gain to get padding offset
//Bit 15: 8,        reg_loop0_adj_pad_gain         unsigned  , default = 64   : gain to loop0 accum to get padding ofset
//Bit  7,           reserved
//Bit  6: 4,        reg_loop0_adj_pad_pxgrouprs    unsigned  , default = 2    : adjustment of the sampelse will be multiple of (2^x), x=0~6
//Bit  3: 2,        reserved
//Bit  1,           reg_loop0_adj_pad_en            unsigned  , default = 1    :
//Bit  0,           reg_loop0_adj_pad_invert_sgn    unsigned  , default = 0    :
#define P_VPU_SRCIF_LOOP_ACCUM_OWT                 (volatile unsigned long *)0x80031628
//Bit 31:29,        reserved
//Bit 28,           reg_loop0_accum_owt_en       unsigned  , default = 0    : : enable overwrite Accum to reg_loop0_accum_owt_value
//Bit 27: 0,        reg_loop0_accum_owt_value   signed    , default = 0    : : overwrite accum with this value for reset or debug
#define P_VPU_SRCIF_VERR_STBDET_WIN                (volatile unsigned long *)0x8003162c
//Bit 31:14,        reserved
//Bit 13: 0,        reg_verr_stbdet_win0        unsigned  , default = 2048 : maximum using 4096 to do detection
#define P_VPU_SRCIF_RO_VERR_CLP_WIN                (volatile unsigned long *)0x80031630
//Bit 31:14,        reserved
//Bit 13: 0,        ro_verr_clp_win0            unsigned  , default = 0    :
#define P_VPU_SRCIF_RO_VERR_ABS_WIN                (volatile unsigned long *)0x80031634
//Bit 31:24,        reserved
//Bit 23: 0,        ro_verr_abs_win0            unsigned  , default = 0    :
#define P_VPU_SRCIF_RO_VERR_SGN_WIN                (volatile unsigned long *)0x80031638
//Bit 31:24,        reserved
//Bit 23: 0,        ro_verr_sgn_win0            signed    , default = 0    :
#define P_VPU_SRCIF_RO_LOOP_ACCUM                  (volatile unsigned long *)0x8003163c
//Bit 31:28,        reserved
//Bit 27: 0,        ro_loop0_accum              signed    , default = 0    : read-only register to line-out loop0_accum during v-blank region
#define P_SRCIF_WRAP_CTRL                          (volatile unsigned long *)0x80031640
#define P_SRCIF_WRAP_CNT0                          (volatile unsigned long *)0x80031644
#define P_SRCIF_WRAP_CNT1                          (volatile unsigned long *)0x80031648
#define P_SRCIF_WRAP_CNT2                          (volatile unsigned long *)0x8003164c
#define P_SRCIF_WRAP_CNT3                          (volatile unsigned long *)0x80031650
#define P_SRCIF_WRAP_CNT4                          (volatile unsigned long *)0x80031654
#define P_SRCIF_WRAP_CNT5                          (volatile unsigned long *)0x80031658
#define P_SRCIF_WRAP_CNT6                          (volatile unsigned long *)0x8003165c
#define P_SRCIF_WRAP_CTRL1                         (volatile unsigned long *)0x80031660
#define P_SRCIF_WRAP_STATUS                        (volatile unsigned long *)0x80031664
#define P_SRCIF_RO_CLK_MUX_CHG                     (volatile unsigned long *)0x80031668
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  vpu_srcif_regs.h
//
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  vpu_reg.h
//
//`include "hdmirx_apb.h"
//`include "hdmitx_apb.h"
// synopsys translate_off
// synopsys translate_on
//
// Closing file:  ./register_map.h
//

#endif // C_ARC_POINTER_H

